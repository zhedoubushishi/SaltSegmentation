webpackJsonp([4],{10:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Current=(window.Kaggle||{}).Current},15:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var l=t(1),o=t(0),i=t(503),a=t(8),s=t(2),r=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return l.__extends(n,e),n.prototype.render=function(){return o.createElement("span",{className:a("tooltip-container",{"tooltip-container--left":this.props.alignLeft},{"tooltip-container--right":this.props.alignRight},this.props.className),"data-tooltip":this.props.tipText,"data-tooltip-size":this.props.size},this.props.children)},n}(o.Component);n.ToolTip=r;var u="\n    font-family: 'Atlas Grotesk', sans-serif;\n",c=s.default.div.withConfig({displayName:"ToolTipContainer"})(g||(g=l.__makeTemplateObject(["\n    display: inline-flex;\n"],["\n    display: inline-flex;\n"]))),p=(s.default.a.withConfig({displayName:"ToolTipAnchor"})(f||(f=l.__makeTemplateObject(["","\n    cursor: pointer;\n"],["","\n    cursor: pointer;\n"])),u),s.default.div.withConfig({displayName:"ToolTipView"})(h||(h=l.__makeTemplateObject(["","\n    max-width: 60vw;\n"],["","\n    max-width: 60vw;\n"])),u)),d=0,m=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.tooltipId="tooltip_"+d++,n.getTipAttributes=function(){return{"data-tip":!0,"data-for":n.tooltipId}},n}return l.__extends(n,e),n.prototype.render=function(){var e=this.props,n=e.children,t=e.tip,a=e.container,s=l.__rest(e,["children","tip","container"]),r=a||c,u=this.getTipAttributes(),d=n?o.Children.map(n,function(e){return o.isValidElement(e)?o.cloneElement(e,u):o.createElement("span",l.__assign({},u),e)}):null;return o.createElement(r,l.__assign({},s),d,o.createElement(i,{id:this.tooltipId,effect:"solid"},o.createElement(p,null,t)))},n}(o.Component);n.ToolTip2=m;var g,f,h},234:function(e,n,t){"use strict";function l(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var n=16*Math.random()|0;return("x"==e?n:3&n|8).toString(16)})}Object.defineProperty(n,"__esModule",{value:!0}),n.uuid=l},2809:function(e,n,t){t(2810),e.exports=t(2818)},2810:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=__webpack_require__(1),NotebookCellOverlay_1=__webpack_require__(2811),NotebookCellScriptTip_1=__webpack_require__(2812),NotebookCellMarkdownEditor_1=__webpack_require__(2813),JupyterEditorBridge_1=__webpack_require__(449),JupyterEnvironmentVariables_1=__webpack_require__(2815);console.log("Jupyter Editor Bootstrapper: Loading");var executingCell=null,JUPYTER_EVENTS_DATA_MAP={"kernel_idle.Kernel":null,"kernel_busy.Kernel":null,"kernel_reconnecting.Kernel":null,"kernel_disconnected.Kernel":null,"kernel_dead.Kernel":null,"kernel_connected.Kernel":null,"set_dirty.Notebook":null,"delete.Cell":null,"execute.CodeCell":function(e){return executingCell=e.cell,{code:e.cell.get_text()}},"output_added.OutputArea":function(e,n){return{cellIndex:n.notebook.find_cell_index(executingCell),output:e.output}},"finished_execute.CodeCell":null},jupyterRequire=eval("require");jupyterRequire(["base/js/namespace","base/js/events"],function(e,n){function t(t){var l=this;console.log("Jupyter Editor Bootstrapper: Initializing"),e.notebook.set_autosave_interval(0),e.MarkdownCell.options_default.placeholder="&nbsp;",e.notebook.get_cells().forEach(function(e){"markdown"===e.cell_type&&""===e.get_text()&&(e.placeholder="&nbsp;",e.unrender())}),NotebookCellOverlay_1.NotebookCellOverlay.register(n,e),NotebookCellScriptTip_1.NotebookCellScriptTip.register(n,e),NotebookCellMarkdownEditor_1.NotebookCellMarkdownEditor.register(n,e),n.on("custom.get_environment_variables",function(e,n){return tslib_1.__awaiter(l,void 0,void 0,function(){var e,t,l,o,i,a;return tslib_1.__generator(this,function(s){switch(s.label){case 0:return e=n,t=e[0],l=e[1],o=e[2],i=n.messageId,[4,JupyterEnvironmentVariables_1.JupyterEnvironmentVariables.getEnvironmentVariablesAsync(t,l,o)];case 1:return a=s.sent(),parent.postMessage({messageId:n.messageId,result:a},"*"),[2]}})})}),e.keyboard_manager.command_shortcuts.add_shortcut("Ctrl-z",{help:"undelete cell",help_index:"zz",handler:function(n){return e.notebook.undelete_cell(),!1}});var o=e.Completer.prototype.finish_completing;e.Completer.prototype.finish_completing=function(e){o.bind(this)(e);this.complete.get(0).getBoundingClientRect().left>708&&this.complete.css("left","708px")},n.on(Object.keys(JUPYTER_EVENTS_DATA_MAP).join(" "),function(n,t){var l=n.type+"."+n.namespace,o=JUPYTER_EVENTS_DATA_MAP[l]&&JUPYTER_EVENTS_DATA_MAP[l](t,e);console.log("Jupyter IFrame pushing event '"+l+"' to container",o),parent.postMessage({jupyterEvent:l,data:o},"*")}),n.on("custom.disconnect",function(){e.notebook.kernel.stop_channels(),e.notebook.keyboard_manager.command_shortcuts.clear_shortcuts(),e.notebook.get_cells().forEach(function(e){e.code_mirror.setOption("readOnly","nocursor")})}),n.on("custom.execute_code_in_cell_1",function(n,t){var l=t[0],o=e.notebook.get_cells().length,i=e.notebook.insert_cell_below("code",o-1);i.set_text(l),i.execute(),e.notebook.delete_cell(o)}),window.onbeforeunload=null,parent.postMessage({jupyterEvent:"app_initialized.NotebookApp"},"*"),console.log("Jupyter Editor Bootstrapper: Initialized")}JupyterEditorBridge_1.JupyterEditorBridge.initJupyter(n),n.one("custom.editor_init",function(l,o){var i=o[0].kaggleCurrent;e.notebook&&e.notebook.session?t(i):n.one("notebook_loaded.Notebook",function(){return t(i)})}),parent.postMessage({jupyterEvent:"custom.editor_listening"},"*")})},2811:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var l=t(1),o=t(0),i=t(48),a=t(15),s=t(43),r=function(e){function n(t){var l=e.call(this,t)||this;return l.onBeforeSelectionChange=function(){setTimeout(function(){l.setState({linesSelected:l.cell.code_mirror.somethingSelected()})})},l.onCellCommandMode=function(e,n){n.cell===l.cell&&l.unmount()},l.onKernelBusy=function(){l.setState({executingCell:!0})},l.onKernelIdle=function(){l.setState({executingCell:!1})},l.onMarkdown=function(e){return setTimeout(function(){l.notebook.cells_to_markdown([l.index]),l.notebook.edit_mode()}),l.unmount(),e.preventDefault(),!1},l.onCode=function(e){return setTimeout(function(){l.notebook.cells_to_code([l.index]),l.notebook.edit_mode()}),l.unmount(),e.preventDefault(),!1},l.onPlay=function(e){return l.cell.execute(),l.notebook.edit_mode(),e.preventDefault(),!1},l.onPlaySelected=function(e){if(l.cell.code_mirror.somethingSelected()){var n=l.cell.get_text(),t=l.cell.code_mirror.getSelection(),o=l.cell.code_mirror.listSelections()[0];l.cell.set_text(t),l.cell.execute(),l.cell.set_text(n),l.cell.code_mirror.setSelection(o.anchor,o.head)}else l.cell.execute();return l.notebook.edit_mode(),e.preventDefault(),!1},l.onStop=function(e){return l.kernel.interrupt(),e.preventDefault(),!1},l.onInsertAbove=function(){l.onInsertCell(0)},l.onInsertBelow=function(){l.onInsertCell(1)},l.onToggleInputVisibility=function(e){return l.toggleCellVisibility("input"),e.preventDefault(),!1},l.onToggleOutputVisibility=function(e){return l.toggleCellVisibility("output"),e.preventDefault(),!1},l.onDelete=function(){l.notebook.delete_cell(l.index),l.notebook.edit_mode(),l.unmount()},l.onInsertCell=function(e){l.notebook.insert_cell_at_index(l.cell.cell_type,l.index+e),l.notebook.edit_mode()},l.unmount=function(){i.unmountComponentAtNode(i.findDOMNode(l).parentNode)},l.isCellAreaHidden=function(e){return!!l.cell.metadata[n.cellAreaKey(e)]},l.renderCellVisibilityButtons=function(){var e=l.isCellAreaHidden("input"),n=l.isCellAreaHidden("output"),t="",i=l.cell.code_mirror.lineCount(),a=i+" "+s("line",i);e&&n?t="input ("+a+") and output":e?t="input ("+a+")":n&&(t="output");var r=t&&o.createElement("div",{className:"cell-overlay__visibility-message"},t," hidden in published notebook  ·");return o.createElement("div",{className:"cell-overlay__insert"},r,o.createElement("div",null,"Hide"),o.createElement("div",{onMouseDown:l.onToggleInputVisibility,className:"cell-overlay__hide-button "+(e&&"selected"),title:"Input"},"Input"),o.createElement("div",{onMouseDown:l.onToggleOutputVisibility,className:"cell-overlay__hide-button "+(n&&"selected"),title:"Output"},"Output"))},l.state={linesSelected:!1,executingCell:!1},l}return l.__extends(n,e),n.register=function(e,t){e.on("edit_mode.Cell",function(t,l){var a=l.cell.element[0],s=document.createElement("div");s.className="cell-overlay-container",a.parentElement.insertBefore(s,a),i.render(o.createElement(n,{cell:l.cell,events:e}),s)}),t.notebook.get_cells().forEach(function(e){n.addVisiblityClassNames(e,"input"),n.addVisiblityClassNames(e,"output")})},n.addVisiblityClassNames=function(e,t){var l=e.element[0],o=n.cellAreaKey(t);e.metadata[o]?l.classList.add(o):l.classList.remove(o)},n.prototype.componentDidMount=function(){this.cell.code_mirror.on("beforeSelectionChange",this.onBeforeSelectionChange),this.props.events.on("command_mode.Cell",this.onCellCommandMode),this.props.events.on("kernel_busy.Kernel",this.onKernelBusy),this.props.events.on("kernel_idle.Kernel",this.onKernelIdle)},n.prototype.componentWillUnmount=function(){this.cell.code_mirror.off("beforeSelectionChange",this.onBeforeSelectionChange),this.props.events.off("command_mode.Cell",this.onCellCommandMode),this.props.events.off("kernel_busy.Kernel",this.onKernelBusy),this.props.events.off("kernel_idle.Kernel",this.onKernelIdle)},Object.defineProperty(n.prototype,"notebook",{get:function(){return this.props.cell.notebook},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"kernel",{get:function(){return this.props.cell.notebook.kernel},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"cell",{get:function(){return this.props.cell},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"index",{get:function(){return this.notebook.find_cell_index(this.cell)},enumerable:!0,configurable:!0}),n.prototype.toggleCellVisibility=function(e){var t=n.cellAreaKey(e),l=!this.cell.metadata[t];this.cell.metadata[t]=l,this.forceUpdate(),n.addVisiblityClassNames(this.cell,e)},n.prototype.render=function(){return o.createElement("div",{className:"cell-overlay"},o.createElement("div",{className:"cell-overlay__toolbar"},"code"===this.cell.cell_type&&this.renderCellVisibilityButtons(),o.createElement("div",{className:"cell-overlay__type"},o.createElement("div",{onMouseDown:this.onMarkdown,className:"cell-overlay__markdown "+("code"!==this.cell.cell_type&&"selected")},"Markdown"),o.createElement("div",{onMouseDown:this.onCode,className:"cell-overlay__code "+("code"===this.cell.cell_type&&"selected")},"Code")),o.createElement("div",{className:"cell-overlay__insert"},o.createElement("div",{onMouseDown:this.onInsertAbove,className:"cell-overlay__above"},o.createElement("i",{className:"fa fa-plus"}),o.createElement("i",{className:"fa fa-sort-up"})),o.createElement("div",{onMouseDown:this.onInsertBelow,className:"cell-overlay__below"},o.createElement("i",{className:"fa fa-plus"}),o.createElement("i",{className:"fa fa-sort-down"}))),o.createElement("div",null,o.createElement("div",{onMouseDown:this.onDelete,className:"cell-overlay__delete"},o.createElement("i",{className:"fa fa-trash"})))),o.createElement("div",{className:"cell-overlay__execute-button-container"},this.state.executingCell?o.createElement("div",{className:"cell-overlay__execute-button cell-overlay__execute-button--"+this.cell.cell_type},o.createElement("i",{onMouseDown:this.onStop,className:"fa fa-stop"})):this.state.linesSelected?o.createElement("div",null,o.createElement(a.ToolTip,{tipText:"Execute highlighted code only.",alignLeft:!0},o.createElement("div",{className:"cell-overlay__execute-button cell-overlay__execute-button--"+this.cell.cell_type},o.createElement("div",{onMouseDown:this.state.linesSelected&&this.onPlaySelected},o.createElement("svg",{width:"21px",height:"19px",viewBox:"0 0 21 19",version:"1.1"},o.createElement("g",{id:"Page-1",stroke:"none",strokeWidth:"1",fill:"none",fillRule:"evenodd"},o.createElement("g",{id:"Notebook-Markdown-Edit-Copy",transform:"translate(-144.000000, -504.000000)"},o.createElement("g",{id:"Group-Copy",transform:"translate(144.000000, 504.000000)"},o.createElement("path",{d:"M11.801741,9.69973555 C12.0660863,9.49540838 12.0660863,9.15886952 11.801741,8.95454235 L0.477527092,0.0843394675 C0.213181737,-0.119987699 0,0.0603009773 0,0.480974556 L0,18.1733033 C0,18.5939769 0.213181737,18.7742656 0.477527092,18.5699384 L11.801741,9.69973555 Z",id:"-copy-2",fill:"#008ABC"}),o.createElement("path",{d:"M17.25,16.9322526 L17.25,1.53846154",id:"Line-3",stroke:"#008ABC",strokeWidth:"1.5",strokeLinecap:"square"}),o.createElement("path",{d:"M20.25,18.0769231 L14.25,18.0769231",id:"Line-2-Copy",stroke:"#008ABC",strokeWidth:"1.5",strokeLinecap:"square"}),o.createElement("path",{d:"M20.25,1.15384615 L14.25,1.15384615",id:"Line-2",stroke:"#008ABC",strokeWidth:"1.5",strokeLinecap:"square"}))))))))):o.createElement("div",{className:"cell-overlay__execute-button cell-overlay__execute-button--"+this.cell.cell_type},o.createElement("i",{onMouseDown:this.onPlay,className:"fa fa-play"}))))},n.cellAreaKey=function(e){return"_kg_hide-"+e},n}(o.Component);n.NotebookCellOverlay=r},2812:function(e,n,t){"use strict";(function(e){Object.defineProperty(n,"__esModule",{value:!0});var l=t(1),o=t(0),i=t(48),a=t(10),s=function(n){function t(){var t=null!==n&&n.apply(this,arguments)||this;return t.handleClick=function(){var n={scriptTipsCode:t.props.tip.scriptTipCode,scriptVersionId:t.props.scriptRunId};e.Scripts.reportScriptTipClick({},n).catch(function(){a.Current.warn("Click logging failed.")})},t}return l.__extends(t,n),t.register=function(e,n){e.on("custom.show_script_tip",function(e,l){var a=l[0],s=l[1],r=l[2],u=n.notebook.get_cell(s),c=u.element[0],p=c.getElementsByClassName("script-tip-container")[0]||document.createElement("div");p.className="script-tip-container",c.insertBefore(p,c.getElementsByClassName("output_wrapper")[0]),i.render(o.createElement(t,{tip:a,scriptRunId:r}),p),u.events.on("execute.CodeCell",function(e,n){u===n.cell&&i.unmountComponentAtNode(p)})})},t.prototype.render=function(){return this.props.tip.htmlToShow?this.renderHtmlTip():o.createElement("div",{className:"script-tip"},o.createElement("i",{className:"fa fa-info-circle"})," ",o.createElement("span",{dangerouslySetInnerHTML:{__html:this.props.tip.textToShow}}))},t.prototype.renderHtmlTip=function(){var e={__html:this.props.tip.htmlToShow};return o.createElement("div",{className:"script-tip"},o.createElement("i",{className:"fa fa-info-circle"})," ",o.createElement("span",{dangerouslySetInnerHTML:e,onClick:this.handleClick}))},t}(o.Component);n.NotebookCellScriptTip=s}).call(n,t(5))},2813:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var l=t(2814),o=function(){function e(){}return e.register=function(e,n){var t=this;e.on("edit_mode.Cell",function(e,n){if("markdown"===n.cell.cell_type){l.default().render(n.cell.code_mirror)}}),e.on("select.Cell",function(e,n){"markdown"===n.cell.cell_type&&n.cell.notebook.edit_mode(),t.checkCellChangeForAutoRender(n.cell)})},e.checkCellChangeForAutoRender=function(n){var t=e.previousCell;t&&t!==n&&"markdown"===t.cell_type&&t.render(),e.previousCell=n},e.previousCell=null,e}();n.NotebookCellMarkdownEditor=o},2814:function(e,n,t){"use strict";function l(e,n){void 0===e&&(e=null),void 0===n&&(n={});var t={theme:"mirrormark",tabSize:"2",indentWithTabs:!0,lineWrapping:!0,extraKeys:{Enter:"newlineAndIndentContinueMarkdownList"},mode:"markdown"};return o.assign(t,n),o.assign(Object.create(a),{element:e,options:t})}/**
 * @license MirrorMark v0.1
 * (c) 2015 Musicbed http://www.musicbed.com
 * License: MIT
 */
Object.defineProperty(n,"__esModule",{value:!0});var o=t(70),i=window.CodeMirror;!function(e){window&&(window.mirrorMark=e)}(l);var a={render:function(e){e.mirrorMarkAdded||(this.registerKeyMaps(this.keyMaps),this.cm=e||i.fromTextArea(this.element,this.options),this.setToolbar(this.tools),e.mirrorMarkAdded=!0)},setToolbar:function(e){var n=document.createElement("ul");n.className=this.options.theme+"-toolbar";var e=this.generateToolList(e);e.forEach(function(e){n.appendChild(e)});var t=this.cm.getWrapperElement();t.parentNode.insertBefore(n,t)},registerKeyMaps:function(e){for(var n in e){if("function"!=typeof this.actions[e[n]])throw"MirrorMark - '"+e[n]+"' is not a registered action";var t={};t[n]=this.actions[e[n]].bind(this),o.assign(this.options.extraKeys,t)}},registerActions:function(e){return o.assign(this.actions,e)},registerTools:function(e,n){for(var t in e)if(this.actions[e[t].action]&&"function"!=typeof this.actions[e[t].action])throw"MirrorMark - '"+e[t].action+"' is not a registered action";if(n)return void(this.tools=e);this.tools=this.tools.concat(e)},generateToolList:function e(n){return n.map(function(n){var t=document.createElement("li"),l=document.createElement("a");if(t.className=n.name,n.className&&(l.className=n.className),n.showName){var o=document.createTextNode(n.name);l.appendChild(o)}if(n.action&&(l.onclick=function(e){this.cm.focus(),this.actions[n.action].call(this)}.bind(this)),t.appendChild(l),n.nested){t.className+=" has-nested";var i=document.createElement("ul");i.className=this.options.theme+"-toolbar-list";e.call(this,n.nested).forEach(function(e){i.appendChild(e)}),t.appendChild(i)}return t}.bind(this))},tools:[{name:"bold",action:"bold",className:"fa fa-bold"},{name:"italicize",action:"italicize",className:"fa fa-italic"},{name:"blockquote",action:"blockquote",className:"fa fa-quote-left"},{name:"link",action:"link",className:"fa fa-link"},{name:"image",action:"image",className:"fa fa-image"},{name:"unorderedList",action:"unorderedList",className:"fa fa-list"},{name:"orderedList",action:"orderedList",className:"fa fa-list-ol"},{name:"fullScreen",action:"fullScreen",className:"fa fa-expand"}],keyMaps:{"Cmd-B":"bold","Cmd-I":"italicize","Cmd-'":"blockquote","Cmd-Alt-L":"orderedList","Cmd-L":"unorderedList","Cmd-Alt-I":"image","Cmd-H":"hr","Cmd-K":"link"},actions:{bold:function(){this.insertAround("**","**")},italicize:function(){this.insertAround("*","*")},code:function(){this.insertAround("```\r\n","\r\n```")},blockquote:function(){this.insertBefore("> ",2)},orderedList:function(){this.insertBefore("1. ",3)},unorderedList:function(){this.insertBefore("* ",2)},image:function(){this.insertBefore("![](http://)",2)},link:function(){this.insertAround("[","](http://)")},hr:function(){this.insert("---")},fullScreen:function(){var e=this.cm.getWrapperElement(),n=document,t=n.fullScreen||n.mozFullScreen||n.webkitFullScreen,l=function(){n.cancelFullScreen?n.cancelFullScreen():n.mozCancelFullScreen?n.mozCancelFullScreen():n.webkitCancelFullScreen&&n.webkitCancelFullScreen()};t?l&&l():function(){e.requestFullscreen?e.requestFullscreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.msRequestFullscreen&&e.msRequestFullscreen()}()}},insert:function(e){var n=this.cm.getDoc(),t=n.getCursor();n.replaceRange(e,{line:t.line,ch:t.ch})},insertAround:function(e,n){var t=this.cm.getDoc(),l=t.getCursor();if(t.somethingSelected()){var o=t.getSelection();t.replaceSelection(e+o+n)}else t.replaceRange(e+n,{line:l.line,ch:l.ch}),t.setCursor({line:l.line,ch:l.ch+e.length})},insertBefore:function(e,n){var t=this.cm.getDoc(),l=t.getCursor();if(t.somethingSelected()){t.listSelections().forEach(function(l){for(var o=[l.head.line,l.anchor.line].sort(),i=o[0];i<=o[1];i++)t.replaceRange(e,{line:i,ch:0});t.setCursor({line:o[0],ch:n||0})})}else t.replaceRange(e,{line:l.line,ch:0}),t.setCursor({line:l.line,ch:n||0})}};n.default=l},2815:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var l=t(1),o=t(2816),i=t(2817),a=function(){function e(){}return e.getEnvironmentVariablesAsync=function(n,t,o){return l.__awaiter(this,void 0,void 0,function(){var i,a,s,r,u;return l.__generator(this,function(l){switch(l.label){case 0:return o&&(e.initialized=!1,e.initializing=!1),e.initialized?[3,2]:e.initializing?[2,[]]:(e.initializing=!0,e.currentLanguageName=t,[4,e.setupGlobalExpandFunctionAsync(e.currentLanguageName)]);case 1:l.sent(),e.initialized=!0,l.label=2;case 2:switch(i="print(___get_global_env_vars___("+JSON.stringify(n)+"))",a="print(GetGlobalEnvVars('"+JSON.stringify(n)+"'))",s="",r=e.currentLanguageName.toLowerCase()){case"r":return[3,3];case"python":return[3,5]}return[3,7];case 3:return[4,e.executeAndWaitForFirstOutputAsync(a)];case 4:return s=l.sent(),[3,8];case 5:return[4,e.executeAndWaitForFirstOutputAsync(i)];case 6:return s=l.sent(),[3,8];case 7:s=JSON.stringify({success:!1,message:"Cannot get environment variables: "+e.currentLanguageName+" is not a supported language."}),l.label=8;case 8:if(u=JSON.parse(s),!u.success)throw Error("Exception occured while querying environment variables: "+u.message);return[2,u.expanded_nodes]}})})},e.setupGlobalExpandFunctionAsync=function(n){return l.__awaiter(this,void 0,void 0,function(){var t,a;return l.__generator(this,function(l){switch(l.label){case 0:switch(console.log("setting up global expand function..."),t="",a=n.toLowerCase()){case"r":return[3,1];case"python":return[3,3];case"default":return[3,5]}return[3,6];case 1:return[4,e.executeAndWaitForFirstOutputAsync(i.GlobalQueryFunctionR)];case 2:return t=l.sent(),[3,6];case 3:return[4,e.executeAndWaitForFirstOutputAsync(o.GlobalQueryFunctionPy)];case 4:return t=l.sent(),[3,6];case 5:t="-1",l.label=6;case 6:return console.log("global expand function ready.",t),[2]}})})},e.executeAndWaitForFirstOutputAsync=function(e){var n;return new Promise(function(t,l){var o={shell:{reply:void 0,payload:{set_next_input:void 0}},iopub:{output:function(e){n==e.parent_header.msg_id?"stdout"==e.content.name?t(e.content.text):l({message:"Expected stdout but got this on "+e.content.name+": "+e.content.text+"."}):l({message:"Expected "+n+" but got "+e.parent_header.msg_id+"."})},clear_output:void 0},input:void 0};n=Jupyter.notebook.kernel.execute(e,o,{silent:!1,user_expressions:{},allow_stdin:!1})})},e.initialized=!1,e.initializing=!1,e}();n.JupyterEnvironmentVariables=a},2816:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.GlobalQueryFunctionPy='\nimport re as ___get_global_env_vars_re___\n___get_global_regex_prog___ = ___get_global_env_vars_re___.compile("^_i*[0-9]*$")\n\ndef ___get_global_env_vars___(paths=None):\n    import json\n    import traceback\n\n    try:\n        paths = paths or []\n\n        def mygetattr(obj, key):\n            try:\n                return getattr(obj, key)\n            except:\n                import traceback\n                return "Error"\n                \n        def to_clean_dict(obj):\n            return {key: mygetattr(obj, key) for key in clean_dir(obj)}\n\n        def clean_dir(obj):\n            return [key for key in dir(obj) if not key.startswith(\'__\') and not callable(mygetattr(obj, key))]\n\n        def extract_var_content(var_value):\n            var_content = str(var_value)\n            return var_content[:1000] + ("..." if len(var_content) > 1000 else "")\n                    \n        def element_tuple(value):\n            d = {\n                str: lambda v: [\'"\' + extract_var_content(v) + \'"\', 0, "str"],\n                int: lambda v: [extract_var_content(v), 0, "int"],\n                bool: lambda v: [extract_var_content(v), 0, "bool"],\n                float: lambda v: [extract_var_content(v), 0, "float"],\n                dict: lambda v: ["{...}", 1 if len(v) > 0 else 0, "dict"],\n                tuple: lambda v: ["(...)", 1 if len(v) > 0 else 0, "tuple"],\n                list: lambda v: ["[...]", 1 if len(v) > 0 else 0, "list"],\n                type(None): lambda v: ["None", 0]\n            }                 \n\n            f = d.get(type(value), lambda v: ["{...}", 1 if len(clean_dir(v)) > 0 else 0, v.__class__.__name__])\n\n            return f(value)\n\n        def expand_children(aggregate):\n            import inspect\n\n            if type(aggregate) == type(list()) or type(aggregate) == type(tuple()):\n                result = []\n                for value in aggregate:\n                    result.append(element_tuple(value))\n            else:\n                if type(aggregate) != type(dict()):\n                    dict_copy = to_clean_dict(aggregate)\n                else:\n                    dict_copy = {key: value for (key, value) in aggregate.items()}\n                    \n                result = {}\n                \n                for (key, value) in dict_copy.items():\n                    if callable(value) or inspect.ismodule(value) or inspect.isclass(value) or inspect.isabstract(value) or key in [\n                            "___get_global_env_vars___",\n                            "___get_global_regex_prog___",\n                            "___get_global_env_vars_re___",\n                            "__name__",\n                            "__doc__",\n                            "__package__",\n                            "__loader__",\n                            "__spec__",\n                            "_ih",\n                            "_oh",\n                            "_dh",\n                            "In",\n                            "Out",\n                            "get_ipython",\n                            "exit",\n                            "quit",\n                            "_",\n                            "__",\n                            "___"] or ___get_global_regex_prog___.match(key):\n                        continue\n                    result[key] = element_tuple(value)\n\n            return result\n\n        expanded_nodes = {}\n        root = globals()\n        \n        for path in paths:\n            current = root\n            cancelled = False\n\n            for node in filter(lambda x: not not x, path):\n                if type(current) == type(list()) or type(current) == type(tuple()):\n                    index = int(node)\n                    if index >= len(current):\n                        cancelled = True\n                        break\n                    current = current[index]\n                else:\n                    if node not in current:\n                        cancelled = True\n                        break\n                    current = current[node]\n            \n            if not cancelled:\n                expanded_nodes[json.dumps(path, separators=(\',\', \':\'))] = expand_children(current)\n        \n        results = {"success": True, "expanded_nodes": expanded_nodes}\n    except:\n        import traceback\n        message = traceback.format_exc()\n        results = {"success": False, "message": message}\n    \n    return json.dumps(results, sort_keys=True)\n        \nprint(0)'},2817:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.GlobalQueryFunctionR="\nGetGlobalEnvVars <- function(paths='[[]]') {\n    library(jsonlite)\n    kGlobalEnvironmentIndex <- 1\n    global.env.vars <- ls(kGlobalEnvironmentIndex)\n    reserved.env.vars <- list('GetGlobalEnvVars')\n    empty.list <- toJSON(list())\n\n    GetNodeAttributes <- function(value){\n        # Returns list of the following: the value as a string, 0 if not expandable or 1 if it is, and the type of the value as a string.\n\n        # Vector values are space separated in RStudio; change behavior here.\n        value.as.character = paste(as.character(value), collapse=' ')\n        displayed.value <- if (nchar(value.as.character) > 1000) paste(substr(value.as.character, 1, 1000), '...') else value.as.character\n\n        expandable <- 0\n        if (!is.atomic(value)) {\n            displayed.value <- '[...]'\n            expandable <- 1\n        }\n\n        return (list(displayed.value, expandable, typeof(value)))\n    }\n\n    GetTopVars <- function() {\n        expanded.nodes = list()\n        for (env.var in global.env.vars[!global.env.vars %in% reserved.env.vars]) {\n            env.var.value <- get(env.var, kGlobalEnvironmentIndex)\n            node.attributes = list()\n            node.attributes[[env.var]] = GetNodeAttributes(env.var.value)\n            \n            expanded.nodes[[empty.list]] = c(expanded.nodes[[empty.list]], node.attributes)\n        }\n        return (expanded.nodes)\n    }\n\n    GetValues <- function(current.value) {\n            node.attributes <- list()\n            index <- 1\n            for (value in current.value) {\n                key = if (length(names(current.value)[index])) names(current.value)[index] else as.character(index)\n                node.attributes[[key]] = GetNodeAttributes(value)\n                index <- index + 1\n            }\n            return(node.attributes)\n    }\n\n    GetEnvVars <- function() {\n        expanded.nodes = GetTopVars()\n\n        paths = fromJSON(paths, simplifyVector=FALSE)\n        for (path in paths) {\n            if (length(path)) {\n                current.value = get(path[[1]], kGlobalEnvironmentIndex)\n                for (index in path[-1]) {\n                    if (is.null(current.value[[index]])) {\n                        index = as.integer(index)   \n                    }\n                        current.value = current.value[[index]]\n                }\n                serialized.path = toJSON(path, auto_unbox=TRUE)\n                expanded.nodes[[serialized.path]] = GetValues(current.value)\n            }         \n        }\n\n        successful.nodes = list(success = TRUE, expanded_nodes = expanded.nodes)\n        return (successful.nodes)\n    }\n    \n    result <- tryCatch(\n        GetEnvVars(), \n        error = function(err) { \n            return(list(success = FALSE, message = as.character(err)))\n        }\n    )\n\n    return(toJSON(result, auto_unbox=TRUE))\n}\n    cat(0)"},2818:function(e,n){},449:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var l=t(1),o=t(234),i=function(){function e(){}return e.initContainer=function(n){this.jupyterIFrameId=n,e.on("message",function(e){var n=e.data.jupyterEvent;if(n){var t=document.createEvent("Event");t.initEvent(n,!0,!0),t.data=e.data.data,window.dispatchEvent(t)}})},e.deinitContainer=function(){e.handlers.forEach(function(e){return window.removeEventListener(e.type,e.listener)}),e.handlers=[]},e.initJupyter=function(e){var n=this;window.addEventListener("message",function(t){var o=t.data,i=o.jupyterCall,a=o.customCall,s=o.args;i?(console.log("Jupyter IFrame received function call "+i,s),n.jupyterApiCall(t,i,s)):a&&(console.log("Jupyter IFrame received custom function call "+a,s),e.trigger(a,l.__assign({messageId:t.data.messageId},s)))})},e.jupyterApiCall=function(e,n,t){return l.__awaiter(this,void 0,void 0,function(){var o,i,a,s,r,u,c;return l.__generator(this,function(p){switch(p.label){case 0:return o=null,i=n.split(".").reduce(function(e,n){return o=e,e[n]},Jupyter),a=i.bind(o).apply(void 0,t),console.log("Jupyter IFrame replying to function call "+n,a),r=(s=parent).postMessage,u={},a instanceof Promise?[4,a]:[3,2];case 1:return c=p.sent(),[3,3];case 2:c=a,p.label=3;case 3:return r.apply(s,[l.__assign.apply(void 0,[(u.result=c,u),e.data]),"*"]),[2]}})})},e.isConnected=function(){return!!this.iFrame},e.on=function(n,t){e.handlers.push({type:n,listener:t}),window.addEventListener(n,t)},e.off=function(e,n){window.removeEventListener(e,n)},e.disconnect=function(){e.call("custom.disconnect")},e.call=function(e){for(var n=[],t=1;t<arguments.length;t++)n[t-1]=arguments[t];return l.__awaiter(this,void 0,void 0,function(){var t=this;return l.__generator(this,function(l){return this.isConnected()?[2,new Promise(function(l,i){var a,s=o.uuid(),r=function n(t){var o=t.data,i=o.messageId,a=o.result;s===i&&(console.log("Notebook container received function call response for "+e+":"+s,a),l(a),window.removeEventListener("message",n))};window.addEventListener("message",r);var u=e.startsWith("custom.");t.iFrame.contentWindow.postMessage((a={messageId:s},a[u?"customCall":"jupyterCall"]=e,a.args=n,a),"*")})]:[2,null]})})},Object.defineProperty(e,"iFrame",{get:function(){return document.getElementById(this.jupyterIFrameId)},enumerable:!0,configurable:!0}),e.handlers=[],e}();n.JupyterEditorBridge=i},5:function(e,n,t){"use strict";(function(e){function l(){var e=Array.from(I.streamListeners.keys()),n=e.reduce(function(e,n){var t;return g.__assign({},e,(t={},t[n]=I.streamListeners.get(n).length,t))},{});return Object.freeze(n)}function o(e){switch(void 0===e?"undefined":d(e)){case"string":return e;case"number":case"boolean":return e.toString();case"undefined":throw new Error("Roslyn API: serializePrimitive should not be called on an undefined value!");case"object":j(null!==e,"Roslyn API: serializePrimitive should not be called on a null value!");var n=e.toString();if(n===D)throw new Error("Roslyn API: serializePrimitive should not be called on a non-primitive object! Received: "+JSON.stringify(e));return n;case"function":case"symbol":default:throw new Error("Roslyn API: serializePrimitive should not be used for typeof "+(void 0===e?"undefined":d(e))+": "+e.toString()+"!")}}function i(e){return function(n,t,l,o){function i(e){l&&l(e)}function a(){return e(t()).then(i)}function s(){c||a().then(r)}function r(){u=window.setTimeout(s,n)}void 0===o&&(o=!1);var u,c=!1;return o?s():r(),function(){c=!0,window.clearTimeout(u)}}}function a(e){var n=null,t=function(e){return n=e,function(){n=null}},l=function(t,l){n&&n.onNext&&n.onNext({status:v.Pending,result:null});var o=e(t,l);return o.then(function(e){n&&n.onNext&&n.onNext({status:v.Complete,result:e}),n&&n.onCompleted&&n.onCompleted()}).catch(function(e){if(!n||!n.onError)throw e;n.onError(e)}),o};return Object.defineProperty(l,"subscribe",{value:t,enumerable:!0,configurable:!0})}function s(e){var n=new R(e),t=n.export(),l={with:function(e){return s(n.opts.with(e).condense())},when:function(e){return s(n.opts.when(e).condense())},transform:function(e){return s(n.opts.transform(e).condense())},clearWith:function(){return s(n.opts.clearWith().condense())},clearWhen:function(){return s(n.opts.clearWhen().condense())},clearTransform:function(){return s(n.opts.clearTransform().condense())},clear:function(){return s(n.opts.clear().condense())},useDebug:function(e){return void 0===e&&(e=!0),s(n.opts.useDebug(e).condense())},withHeaders:function(e){return s(n.opts.with(w.withHeaders(e)).condense())},withHeader:function(e,t){return s(n.opts.with(w.withHeader(e,t)).condense())}},o=Object.keys(l).reduce(function(e,n){var t;return g.__assign({},e,(t={},t[n]={value:l[n],enumerable:!0,writable:!1,configurable:!1},t))},{});return Object.defineProperties(t,o)}function r(e){return s(e)}function u(e){function n(n){var t=I.streamListeners.get(e);return t.push(n),t.length>100&&console.warn("Possible stream leak detected.",l()),function(){t.splice(t.indexOf(n),1)}}return I.streamListeners.has(e)||I.streamListeners.set(e,[]),n}function c(e){var n={fontSize:"1.25em",fontStyle:"italic"},t={backgroundColor:"white",fontFamily:"'Atlas Grotesk', sans-serif",border:"1px solid #DEDFE0",borderRadius:4,fontSize:"0.75rem",padding:"5px 24px",overflow:"scroll",maxHeight:"25rem",lineHeight:"1.5rem"},l=function(e){function l(){return null!==e&&e.apply(this,arguments)||this}return g.__extends(l,e),l.prototype.render=function(){var e=this.props,l=e.fetchProps,o=e.children;return f.createElement("pre",{style:t},f.createElement("h2",{style:n},"Api Preview"),f.createElement("h4",null,"route | ",JSON.stringify(l.route)),JSON.stringify(o,null,4))},l}(f.Component);return function(n){function t(t){var o=n.call(this,t)||this;return o.fetch=function(n,t){var l=o.props,i=l.poll,a=l.withHeaders;if(o.fetchMounted){var s=Object.keys(n).some(function(e){return n[e]!==o.props.route[e]}),r=s||t,u=a?e.withHeaders(a):e;if(o.props.with)for(var c=0,p=o.props.with;c<p.length;c++){var d=p[c];u=u.with(d)}if(o.props.when)for(var m=0,g=o.props.when;m<g.length;m++){var d=g[m];u=u.when(d)}if(o.props.transform)for(var f=0,h=o.props.transform;f<h.length;f++){var d=h[f];u=u.transform(d)}u(n).then(function(e){o.fetchMounted&&(o.setState({result:e},function(){o.fetchMounted&&r&&o.forceUpdate()}),i&&(o.pollId=window.setTimeout(function(){return o.fetch(n,t)},i)))})}else o.pollId&&window.clearTimeout(o.pollId)},o.createContext=function(){return{route:o.props.route,preview:function(){return f.createElement(l,{fetchProps:o.props,children:o.state.result})}}},o.fetchMounted=!1,o.state={result:null},o}return g.__extends(t,n),t.prototype.componentDidMount=function(){var e=this.props,n=(e.children,e.route);e.poll;this.fetchMounted=!0,this.fetch(n)},t.prototype.componentWillUnmount=function(){this.fetchMounted=!1,this.pollId&&window.clearTimeout(this.pollId)},t.prototype.componentWillReceiveProps=function(e){var n=this.props.route?Object.keys(this.props.route):[],t=e.route?Object.keys(e.route):[];if(n.length!==t.length)this.fetch(e.route);else for(var l=0,o=n;l<o.length;l++){var i=o[l];if(this.props.route[i]!==e[i]){this.fetch(e.route);break}}},t.prototype.render=function(){var e=this.props,n=e.children,t=e.placeholder,l=this.state.result;return l?n(l,this.createContext()):t||null},t}(f.PureComponent)}function p(e,n){var t=this;return new Promise(function(l,o){return g.__awaiter(t,void 0,void 0,function(){var t,i,a;return g.__generator(this,function(r){switch(r.label){case 0:t=s([["POST","application/json","application/json"],[],"/requests/{0}",["typeName"],["request"],null,"json",null,null,null]),_&&(t=t.withHeader("__RequestVerificationToken",_)),r.label=1;case 1:return r.trys.push([1,3,,4]),[4,t({typeName:e},n)];case 2:return i=r.sent(),i.wasSuccessful?l(i.result):o(i.errors),[3,4];case 3:return a=r.sent(),o(a),[3,4];case 4:return[2]}})})})}var d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0});var m,g=t(1),f=t(0),h=t(34),j=t(16);!function(e){e.None="none",e.Log="log",e.Debug="debug"}(m=n.LoggingFlag||(n.LoggingFlag={}));var b;!function(e){e.Browser="browser",e.Node="node"}(b=n.EnvironmentFlag||(n.EnvironmentFlag={}));var v;!function(e){e.Pending="pending",e.Complete="complete"}(v=n.FetchStatus||(n.FetchStatus={}));var S=function(){function e(){}return e.Redirects=[202,301,302],e}(),y=function(){function e(){}return e.validateLocation=function(e){var n=e.pathname,t=e.search,l=e.hash;if(n.length&&!n.startsWith("/"))throw new Error("Api.Utils.createLocation Error: pathname must begin with a '/' or be empty. Location: "+e);if(t.length&&!t.startsWith("?"))throw new Error("Api.Utils.createLocation Error: search must begin with a '?' or be empty. Location: "+e);if(l.length&&!l.startsWith("#"))throw new Error("Api.Utils.createLocation Error: hash must begin with a '#' or be empty. Location: "+e)},e.createLocation=function(n){void 0===n&&(n={});var t=n.protocol||window.location.protocol||"http:",l=n.hostname||window.location.hostname||"localhost",o=n.port||window.location.port||"80",i=n.host||l+":"+o,a=n.origin||window.location.origin||t+"//"+i,s=n.pathname||"/",r=n.search||"",u=n.hash||"",c=""+a+s+r+u,p={protocol:t,host:i,hostname:l,port:o,origin:a,pathname:s,search:r,hash:u,href:c,assign:function(){throw new Error("SyntheticLocation does not implement methods.")},reload:function(){throw new Error("SyntheticLocation does not implement methods.")},replace:function(){throw new Error("SyntheticLocation does not implement methods.")},toString:function(){return this.href}};return e.validateLocation(p),p},e.parseLocation=function(n){var t=document.createElement("a");return t.href=n,e.createLocation(t)},e.condenseInit=function(e){var n=e.headers;return[e.method,n.get("Content-Type"),n.get("Accept")]},e.expandInit=function(e){var n=e[0],t=e[1],l=e[2],o=new Headers;return t&&o.append("Content-Type",t),l&&o.append("Accept",l),{method:n,headers:o}},e.localhost=e.parseLocation("http://localhost"),e}();n.Utils=y;var _=function(){try{return(((window||{}).Kaggle||{}).Current||{}).antiForgeryToken||null}catch(e){return console.warn("Kaggle.Current.antiForgeryToken is not defined: "+e.message),null}}(),w=function(){function e(){}return e.withHeader=function(e,n){return function(t,l,o,i){var a=new Headers(l.headers);return a.set(e,n),o(t,g.__assign({},l,{headers:a}))}},e.withHeaders=function(e){return function(n,t,l,o){for(var i=new Headers(t.headers),a=0,s=Object.entries(e);a<s.length;a++){var r=s[a],u=r[0],c=r[1];i.set(u,c)}return l(n,g.__assign({},t,{headers:i}))}},e.withAntiForgeryHeader=e.withHeaders({__RequestVerificationToken:_}),e.withJSON=e.withHeaders({"Content-Type":"application/json",Accept:"application/json"}),e.withCredentials=function(e){return function(n,t,l){return l(n,g.__assign({},t,{credentials:e}))}},e.withRedirect=function(e){return function(n,t,l){return l(n,g.__assign({},t,{redirect:e}))}},e.withOriginUrl=function(e){return function(n,t,l){if("string"!=typeof n||n.length>0&&"/"!==n.charAt(0))throw new Error("[RequestMiddlewares.withOrigin] path was not in the expected format: "+n);return l(e.protocol+"//"+e.host+n,t)}},e.withLocalhostUrl=e.withOriginUrl(y.localhost),e.browserDefaults=[e.withCredentials("same-origin"),e.withRedirect("follow"),_?e.withAntiForgeryHeader:null].filter(function(e){return null!==e}),e.nodeDefaults=[e.withLocalhostUrl,e.withCredentials("include"),e.withRedirect("follow")],e}();n.RequestMiddlewares=w;var T=function(){function e(){}return e.redirect=function(e,n,t){if(!S.Redirects.includes(e.status)||!e.headers.has("Location"))return n(e);var l=e.headers.get("Location");return t.debug&&t.debug("fetch received response status "+e.status+": redirecting to "+l),window.location.assign(l),null},e.enforceStatuses=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return function(n,t){if(!e.includes(n.status))throw new Error("[ResponseMiddlewares.enforceStatuses] response had a disallowed status | "+n.status+": "+n.statusText);return t(n)}},e.enforceOk=function(e,n,t){if(!e.ok)throw new Error("[ResponseMiddlewares.enforceOk] response was not ok | "+e.status+": "+e.statusText);return n(e)},e.defaults=[e.redirect,e.enforceOk],e}();n.ResponseMiddlewares=T;var C=function(){function e(){}return e.defaults=[],e}();n.ResultMiddlewares=C;var k=function(){function n(e){var n=e.logging,t=e.environment,l=this;this.condense=function(){return[l.logging,l.environment]},this.logging=n,this.environment=t}return n.expand=function(t){var l=m.None,o="object"!==("undefined"==typeof window?"undefined":d(window))||e.__JEST__?b.Node:b.Browser,i=t||[],a=i[0],s=void 0===a?l:a,r=i[1];return new n({logging:s,environment:void 0===r?o:r})},n}(),E=function(){function e(n){var t=this;this.withHeaders=function(e){var n=g.__assign({},t.init.headers,e),l=g.__assign({},t.init,{headers:n});return t.partialClone({init:l})},this.with=function(e){var n=t.requestMiddlewares.concat([e]);return t.partialClone({requestMiddlewares:n})},this.when=function(e){var n=[e].concat(t.responseMiddlewares);return t.partialClone({responseMiddlewares:n})},this.transform=function(e){var n=[e].concat(t.resultMiddlewares);return t.partialClone({resultMiddlewares:n})},this.clearWith=function(){return t.partialClone({requestMiddlewares:[]})},this.clearWhen=function(){return t.partialClone({responseMiddlewares:[]})},this.clearTransform=function(){return t.partialClone({resultMiddlewares:[]})},this.clear=function(){return t.partialClone({requestMiddlewares:[],responseMiddlewares:[],resultMiddlewares:[]})},this.useDebug=function(e){return void 0===e&&(e=!0),t.partialClone({flags:new k({environment:t.flags.environment,logging:e?m.Debug:m.None})})},this.condense=function(e){return void 0===e&&(e=t),[y.condenseInit(e.init),e.flags.condense(),e.routeTemplate,e.routeKeys,e.queryKeys,e.bodyKeys,e.responseType,e.requestMiddlewares,e.responseMiddlewares,e.resultMiddlewares]},this.partialClone=function(n){return void 0===n&&(n={}),n.init||(n.init=t.init),n.flags||(n.flags=t.flags),n.routeTemplate||(n.routeTemplate=t.routeTemplate),n.routeKeys||(n.routeKeys=t.routeKeys),n.queryKeys||(n.queryKeys=t.queryKeys),n.responseType||(n.responseType=t.responseType),n.requestMiddlewares||(n.requestMiddlewares=t.requestMiddlewares),n.responseMiddlewares||(n.responseMiddlewares=t.responseMiddlewares),n.resultMiddlewares||(n.resultMiddlewares=t.resultMiddlewares),new e(t.condense(n))};var l=n[0],o=n[1],i=n[2],a=n[3],s=n[4],r=n[5],u=n[6],c=n[7],p=n[8],d=n[9],f=y.expandInit(l),h=f.headers,j=g.__rest(f,["headers"]);switch(this.init=Object.freeze(g.__assign({},j,{headers:Object.freeze(h)})),this.flags=Object.freeze(k.expand(o)),this.routeTemplate=Object.freeze(i),this.routeKeys=Object.freeze(a),this.queryKeys=Object.freeze(s),this.bodyKeys=Object.freeze(r),this.responseType=Object.freeze(u),this.flags.environment===b.Node?this.requestMiddlewares=Object.freeze(c||w.nodeDefaults):this.flags.environment===b.Browser&&(this.requestMiddlewares=Object.freeze(c||w.browserDefaults)),this.responseMiddlewares=Object.freeze(p||T.defaults),this.resultMiddlewares=Object.freeze(d||C.defaults),this.flags.logging){case m.Debug:this.debug=function(e){for(var n=[],l=1;l<arguments.length;l++)n[l-1]=arguments[l];console[t.flags.logging]?console[t.flags.logging].apply(console,[e].concat(n)):console.log.apply(console,[e].concat(n))};case m.Log:this.log=function(e){for(var n=[],t=1;t<arguments.length;t++)n[t-1]=arguments[t];console.log.apply(console,[e].concat(n))}}}return e}(),P=function(){function e(e){var n=this;this.reverse=function(e){var t=n.opts,l=t.routeTemplate,o=t.routeKeys,i=e.includes("#")?e.split("#"):[e,null],a=i[0],s=(i[1],a.includes("?")?a.split("?"):[a,null]),r=s[0],u=(s[1],n.routeStripper.exec(r)),c=(u[0],u.slice(1));if(n.opts.routeKeys.length!==c.length)throw new Error("Route does not match.\n\trouteTemplate: "+l+"\n\turl: "+e+"\n\trouteKeys: "+JSON.stringify(o)+"\n\trouteValues: "+JSON.stringify(c));return{route:o.reduce(function(n,t,i){var a,s=c[i];if("null"===s||"undefined"===s)throw new Error("Received url with null or undefined values.\n\trouteTemplate: "+l+"\n\turl: "+e+"\n\trouteKeys: "+JSON.stringify(o)+"\n\trouteValues: "+JSON.stringify(c)+"\n\tFailed on ["+t+"]: "+s);return g.__assign({},n,(a={},a[t]=s,a))},{}),query:{}}},this.opts=e;var t=this.opts.routeKeys.reduce(function(e,n,t){return e.replace("{"+t+"}","([^/$]+)")},this.opts.routeTemplate);this.routeStripper=new RegExp(t);var l=this.opts.queryKeys.map(function(e,n){return e+"=([^&$]+)"}).join("&");this.queryStripper=new RegExp(l)}return e}(),O={VALID_URL:/[^{}]/},D={}.toString(),I={requests:new Map,streamListeners:new Map},R=function(){function e(e){var n=this;this.getMembers=function(){return{routeTemplate:n.opts.routeTemplate,validateRoute:n.validateRoute,validateUrl:n.validateUrl,getLocation:n.getLocation,getUrl:n.getUrl}},this.validateRoute=function(e){var t=n.reverser.reverse(e);n.opts.debug&&n.opts.debug("reversed route\n\turl: "+e+"\n\trouteInfo:"+JSON.stringify(t))},this.validateUrl=function(e){if(!O.VALID_URL.test(e))throw new Error(n.toString()+": Route was invalid | routeTemplate: '"+n.opts.routeTemplate+"' => '"+e+"'")},this.getLocation=function(e){var t=n.getUrl(e);return y.parseLocation(t)},this.getUrl=function(e){if("string"==typeof e){var t=e;return n.opts.debug&&n.validateRoute(t),n.validateUrl(t),t}var l=Object.keys(e),i=l.filter(function(e){return n.opts.routeKeys.includes(e)}),a=l.filter(function(e){return n.opts.queryKeys.includes(e)}),s=function(t){try{return o(e[t])}catch(e){throw new Error('Roslyn API: Unsupported route value received for route key "'+t+'" of route template "'+n.opts.routeTemplate+'"!\n'+e.message)}},r=""+function(){return i.reduce(function(e,n,t){return e.replace("{"+t+"}",s(n))},n.opts.routeTemplate)}()+function(){return a.length>0?"?"+a.map(function(n){return n+"="+e[n]}).join("&"):""}();return n.validateUrl(r),r},this.applyRequestMiddleware=function(e,t,l){void 0===l&&(l=0);var o=n.opts.requestMiddlewares;return o.length==l?[e,t]:(0,o[l])(e,t,function(e,t){return n.applyRequestMiddleware(e,t,l+1)},n.opts)},this.applyResponseMiddleware=function(e,t){void 0===t&&(t=0);var l=n.opts.responseMiddlewares;return l.length==t?e:(0,l[t])(e,function(e){return void 0!==e&&null!==e?n.applyResponseMiddleware(e,t+1):(n.opts.debug&&n.opts.debug("response handling exited early"),null)},n.opts)},this.applyResultMiddleware=function(e,t){void 0===t&&(t=0);var l=n.opts.resultMiddlewares;return l.length==t?e:(0,l[t])(e,function(e){return n.applyResultMiddleware(e,t+1)},n.opts)},this.handleResponse=function(e){var t=n.applyResponseMiddleware(e);return null===t?(n.opts.debug&&n.opts.debug("response handling exited early"),Promise.resolve(null)):t[n.opts.responseType]().then(function(e){return n.applyResultMiddleware(e)})},this.createFetchArgs=function(e,t){var l=n.applyRequestMiddleware(e,n.opts.init);return[l[0],l[1]]},this.toString=function(){return"ApiOpts: "+n.opts.routeTemplate},this.fetch=function(e,t){var o=n.getUrl(e),i=n.createFetchArgs(o,e),a=i[0],s=i[1];void 0!==t&&(s.body=n.createBody(t));var r=n.createFingerprint(e),c=u(r),p=null,d=!1,m=h(a,s).then(function(e){var t=n.handleResponse(e),l=e.headers.get("X-MiniProfiler-Ids");return"undefined"!=typeof MiniProfiler&&l&&l.length&&MiniProfiler.fetchResults(JSON.parse(l)),t.then(function(e){p=e;var n=I.streamListeners.get(r);if(n)for(var t=0,l=n;t<l.length;t++){var o=l[t];o(e)}return d=!0,e})});return Object.defineProperties(m,{stream:{value:c,configurable:!1,writable:!1,enumerable:!0},info:{get:function(){return{fingerprint:r,streamCounts:l(),lastResult:p,listenersNotified:d}},configurable:!1,enumerable:!0}})},this.createFingerprint=function(e){var t=n.getUrl(e);return n.opts.init.method+"|"+t},this.pascalCase=function(e){if(null===e||void 0===e)return e;if("object"!==(void 0===e?"undefined":d(e)))return e;if(Array.isArray(e))return e;var t=Object.keys(e);return 0===t.length?e:t.reduce(function(t,l){var o;return g.__assign({},t,(o={},o[l.charAt(0).toUpperCase()+l.substr(1)]=n.pascalCase(e[l]),o))},{})},this.createBody=function(e){var t=n.opts,l=t.init,o=(t.bodyKeys,l.headers),i=o.get("Content-Type");if(null===i)return e;var a=void 0===e?"undefined":d(e);if("string"===a)return JSON.stringify(e);if("number"===a)return'"'+e+'"';if(i.includes("application/json"))return"object"===(void 0===e?"undefined":d(e))?JSON.stringify(e):{};if(i.includes("application/octet-stream")){if(!(e instanceof Blob))throw new Error('Expected body type of "Blob", received "'+("object"===(void 0===e?"undefined":d(e))?JSON.stringify(e):e)+'"');return e}if(i.includes("multipart/form-data")){if(!(e instanceof FormData))throw new Error('Expected body type of "FormData", received "'+("object"===(void 0===e?"undefined":d(e))?JSON.stringify(e):e)+'"');return e}throw new Error('Fetch init contains an unimplemented "Content-Type" header: "'+i+'"')},this.export=function(){var e=a(n.fetch),t=i(e),l=g.__assign({},n.getMembers(),{poll:t}),o=Object.keys(l).reduce(function(e,n){var t;return g.__assign({},e,(t={},t[n]={value:l[n],enumerable:!0,writable:!1,configurable:!1},t))},{});return Object.defineProperties(e,o)},this.opts=new E(e),this.opts.debug&&(this.reverser=new P(this.opts),this.opts.debug("Action: "+this.opts.routeTemplate))}return e}();if(n.FetchBuilder=R,n.createRouteFetch=r,void 0===f.PureComponent)throw new Error("React.PureComponent does not exist! Upgrade to latest react library.");n.Account={almostThere:s([["POST","application/json","application/json"],[],"/account/register/almost",[],[],null,"json",null,null,null]),confirmDeleteAccount:s([["POST","application/json","application/json"],[],"/account/delete/confirm",[],["captchaValid"],null,"json",null,null,null]),forgotPasswordAcceptEmail:s([["POST",null,"application/json"],[],"/forgot/password/confirm",[],["email","captchaValid"],null,"json",null,null,null]),forgotUserNameAcceptEmail:s([["POST",null,"application/json"],[],"/account/funac",[],["email","captchaValid"],null,"json",null,null,null]),login:s([["POST","application/json","application/json"],[],"/account/login",[],["captchaValid","returnUrl","isModal"],null,"json",null,null,null]),register:s([["POST","application/json","application/json"],[],"/account/register",[],[],null,"json",null,null,null]),resendVerificationEmail:s([["POST","application/json","application/json"],[],"/account/verification/resend",[],[],null,"json",null,null,null]),resetPassword:s([["POST","application/json","application/json"],[],"/forgot/password/reset",[],[],null,"json",null,null,null]),sendPhoneVerification:s([["POST","application/json","application/json"],[],"/account/phone/send",[],["captchaValid"],null,"json",null,null,null]),validateUserName:s([["POST","application/json","application/json"],[],"/account/validate-username",[],[],null,"json",null,null,null]),verify:s([["POST",null,"application/json"],[],"/account/verify",[],["id","captchaValid"],null,"json",null,null,null]),verifyCode:s([["POST","application/json","application/json"],[],"/account/phone/verify",[],[],null,"json",null,null,null])},n.ReactAccount={},n.Admin={acceptSms:s([["POST","application/json","application/json"],[],"/admin/sms-voice",[],[],null,"json",null,null,null]),archiveEmails:s([["POST",null,"application/json"],[],"/admin/emails/archive",[],["beginDate","endDate","toUserEmailOrId","emailId","comment","limit","onlyPending","onlyUnarchived"],null,"json",null,null,null]),archiveEmailsDup:s([["POST",null,"application/json"],[],"/admin/emails/archivedup",[],["beginDate","endDate","toUserEmailOrId","emailId","comment","limit","onlyPending","onlyUnarchived"],null,"json",null,null,null]),banIP:s([["POST","application/json","application/json"],[],"/admin/ips/ban.json",[],[],null,"json",null,null,null]),cancelSegmentedTask:r([["GET","application/json","application/json"],[],"/admin/segmented/tasks/{0}/cancel",["id"],["source"],null,"json",null,null,null]),cloneCompetition:s([["POST",null,"application/json"],[],"/admin/c/{0}/clone/{1}",["competitionId","destinationCompetitionId"],[],null,"json",null,null,null]),databaseCpuTime:r([["GET","application/json","application/json"],[],"/admin/db/cpu-time.json",[],[],null,"json",null,null,null]),databaseCpuUtilization:r([["GET","application/json","application/json"],[],"/admin/db/cpu-utilization.json",[],[],null,"json",null,null,null]),databaseQueryDetails:r([["GET","application/json","application/json"],[],"/admin/db/query-details.json",[],["batchQueryHandle"],null,"json",null,null,null]),databaseQueryWallOfShame:r([["GET","application/json","application/json"],[],"/admin/db/qwos.json",[],["startTime","endTime"],null,"json",null,null,null]),databaseQwosAlerts:r([["GET","application/json","application/json"],[],"/admin/db/qwos-alerts.json",[],[],null,"json",null,null,null]),databaseSize:r([["GET","application/json","application/json"],[],"/admin/db/size.json",[],[],null,"json",null,null,null]),datasetsAdminGetReprocessingJobs:r([["GET","application/json","application/json"],[],"/admin/datasets/batchprocessing/jobs",[],["count"],null,"json",null,null,null]),datasetsAdminNewJob:s([["POST","application/json","application/json"],[],"/admin/datasets/batchprocessing/new",[],[],null,"json",null,null,null]),deleteCompetitionJson:s([["POST",null,"application/json"],[],"/admin/c/{0}/delete",["competitionId"],[],null,"json",null,null,null]),emailCompetitors:s([["POST","application/json","application/json"],[],"/admin/c/{0}/email",["competitionId"],[],null,"json",null,null,null]),emailCompetitorsPreview:s([["PUT","application/json","application/json"],[],"/admin/c/{0}/email/preview",["competitionId"],[],null,"json",null,null,null]),generateLogMessage:s([["POST",null,"application/json"],[],"/admin/logging/log",[],["name","level","message"],null,"json",null,null,null]),getBackgroundTask:r([["GET","application/json","application/json"],[],"/admin/background/tasks/{0}",["id"],["source"],null,"json",null,null,null]),getBackgroundTasks:r([["GET","application/json","application/json"],[],"/admin/background/tasks",[],["type","entityName","entityId"],null,"json",null,null,null]),getEmails:r([["GET","application/json","application/json"],[],"/admin/emails/get",[],["beginDate","endDate","toUserEmailOrId","emailId","comment","limit","page","onlyPending","onlyUnarchived"],null,"json",null,null,null]),getIPRangesJson:r([["GET","application/json","application/json"],[],"/admin/ips/get-ip-ranges.json",[],["isWhitelist","page"],null,"json",null,null,null]),getSubmission:r([["GET","application/json","application/json"],[],"/admin/submissions/{0}",["submissionId"],[],null,"json",null,null,null]),getSubmissions:r([["GET","application/json","application/json"],[],"/admin/submissions.json",[],[],null,"json",null,null,null]),hardDeleteSubmission:s([["DELETE",null,"application/json"],[],"/admin/submission/{0}",["submissionId"],[],null,"json",null,null,null]),invalidateCompetitionSubmissions:s([["POST","application/json","application/json"],[],"/admin/c/{0}/submissions/invalidate",["competitionId"],[],null,"json",null,null,null]),loginAs:r([["GET","application/json","application/json"],[],"/admin/login/as",[],["userId"],null,"json",null,null,null]),niko:r([["GET","application/json","application/json"],[],"/admin/niko.json",[],["showAllTeams","totalWeeks","beginDate","endDate"],null,"json",null,null,null]),rescoreCompetitionSubmissions:s([["POST",null,"application/json"],[],"/admin/c/{0}/submissions/rescore/{1}",["competitionId","rescoreType"],["skip","take","minId","maxId"],null,"json",null,null,null]),rescoreCompetitionSubmissionsPreview:r([["GET","application/json","application/json"],[],"/admin/c/{0}/submissions/rescore/{1}/preview",["competitionId","rescoreType"],["skip","take","minId","maxId"],null,"json",null,null,null]),rescorePendingSitewideSubmissions:s([["POST",null,"application/json"],[],"/admin/submissions/rescore/pending",[],[],null,"json",null,null,null]),rescorePendingSitewideSubmissionsPreview:r([["GET","application/json","application/json"],[],"/admin/submissions/rescore/pending/preview",[],[],null,"json",null,null,null]),rescoreSpecificCompetitionSubmissions:s([["POST","application/json","application/json"],[],"/admin/c/{0}/submissions/rescore/specific",["competitionId"],[],null,"json",null,null,null]),rescoreSpecificCompetitionSubmissionsPreview:s([["POST","application/json","application/json"],[],"/admin/c/{0}/submissions/rescore/specific/preview",["competitionId"],[],null,"json",null,null,null]),rescoreSpecificSubmissions:s([["POST","application/json","application/json"],[],"/admin/submissions/rescore/specific",[],[],null,"json",null,null,null]),rescoreSpecificSubmissionsPreview:r([["GET","application/json","application/json"],[],"/admin/submissions/rescore/specific/preview",[],[],null,"json",null,null,null]),resendEmails:s([["POST",null,"application/json"],[],"/admin/emails/resend",[],["beginDate","endDate","toUserEmailOrId","emailId","comment","limit","onlyPending","onlyUnarchived"],null,"json",null,null,null]),setCompetitionDeadlineNow:s([["POST",null,"application/json"],[],"/admin/c/{0}/set-deadline-now",["competitionId"],[],null,"json",null,null,null]),setDockerImageDigest:s([["POST","application/json","application/json"],[],"/admin/imagedigestupdate",[],[],null,"json",null,null,null]),simulateBackgroundWork:s([["POST","application/json","application/json"],[],"/admin/background/tasks/simulate",[],[],null,"json",null,null,null]),unbanIP:r([["GET","application/json","application/json"],[],"/admin/ips/unban.json",[],["id"],null,"json",null,null,null]),unwhitelistIP:r([["GET","application/json","application/json"],[],"/admin/ips/unwhitelist.json",[],["id"],null,"json",null,null,null]),updateCompetition:s([["POST",null,"application/json"],[],"/admin/c/{0}/update",["competitionId"],["responsibleId"],null,"json",null,null,null]),updateEmbargoedIPAddresses:s([["POST","application/json","application/json"],[],"/admin/ips/embargo.json",[],[],null,"json",null,null,null]),updateLeaderboard:s([["POST",null,"application/json"],[],"/admin/c/{0}/leaderboard/update",["competitionId"],[],null,"json",null,null,null]),whitelistIP:s([["POST","application/json","application/json"],[],"/admin/ips/whitelist.json",[],[],null,"json",null,null,null])},n.ReactAdmin={CancelSegmentedTask:c(n.Admin.cancelSegmentedTask),DatabaseCpuTime:c(n.Admin.databaseCpuTime),DatabaseCpuUtilization:c(n.Admin.databaseCpuUtilization),DatabaseQueryDetails:c(n.Admin.databaseQueryDetails),DatabaseQueryWallOfShame:c(n.Admin.databaseQueryWallOfShame),DatabaseQwosAlerts:c(n.Admin.databaseQwosAlerts),DatabaseSize:c(n.Admin.databaseSize),DatasetsAdminGetReprocessingJobs:c(n.Admin.datasetsAdminGetReprocessingJobs),GetBackgroundTask:c(n.Admin.getBackgroundTask),GetBackgroundTasks:c(n.Admin.getBackgroundTasks),GetEmails:c(n.Admin.getEmails),GetIPRangesJson:c(n.Admin.getIPRangesJson),GetSubmission:c(n.Admin.getSubmission),GetSubmissions:c(n.Admin.getSubmissions),LoginAs:c(n.Admin.loginAs),Niko:c(n.Admin.niko),RescoreCompetitionSubmissionsPreview:c(n.Admin.rescoreCompetitionSubmissionsPreview),RescorePendingSitewideSubmissionsPreview:c(n.Admin.rescorePendingSitewideSubmissionsPreview),RescoreSpecificSubmissionsPreview:c(n.Admin.rescoreSpecificSubmissionsPreview),UnbanIP:c(n.Admin.unbanIP),UnwhitelistIP:c(n.Admin.unwhitelistIP)},n.Analytics={recordDatasetsView:r([["GET","application/json","application/json"],[],"/analytics/viewdatasets",[],[],null,"json",null,null,null]),regenerateToken:r([["GET","application/json","application/json"],[],"/analytics/token",[],[],null,"json",null,null,null])},n.ReactAnalytics={RecordDatasetsView:c(n.Analytics.recordDatasetsView),RegenerateToken:c(n.Analytics.regenerateToken)},n.BlobFiles={createInboxBlob:s([["POST",null,"application/json"],[],"/blobs/inbox/{0}",["entityName"],["fileName","contentLength","lastModifiedDateUtc","getZipFileInfo"],null,"json",null,null,null]),createNewBlob:s([["POST","application/json","application/json"],[],"/blobs/new/{0}",["blobBucket"],[],null,"json",null,null,null]),detectDuplication:s([["POST","application/json","application/json"],[],"/blobs/detect-duplication",[],[],null,"json",null,null,null]),downloadBlobFile:r([["GET","application/json","application/json"],[],"/blobs/download/{0}/{1}/{2}",["entityName","entityId","fileName"],[],null,"json",null,null,null]),moveBlobToCompetitionReact:s([["POST",null,"application/json"],[],"/blobs/move/to-competition/{0}",["competitionId"],["blobFileToken"],null,"json",null,null,null]),processInboxBlobChunk:r([["GET","application/json","application/json"],[],"/blobs/inbox/{0}/{1}/{2}/{3}",["entityName","guid","contentLength?","userReportedLastModifiedDate?"],[],null,"json",null,null,null])},n.ReactBlobFiles={DownloadBlobFile:c(n.BlobFiles.downloadBlobFile),ProcessInboxBlobChunk:c(n.BlobFiles.processInboxBlobChunk)},n.Categories={getCategoriesById:r([["GET","application/json","application/json"],[],"/categories/ids/{0}",["categoryids"],[],null,"json",null,null,null]),getTopCategories:r([["GET","application/json","application/json"],[],"/categories/top/{0}/{1}",["type","count"],[],null,"json",null,null,null]),searchCategories:r([["GET","application/json","application/json"],[],"/categories/search/{0}/{1}",["type","searchQuery"],[],null,"json",null,null,null])},n.ReactCategories={GetCategoriesById:c(n.Categories.getCategoriesById),GetTopCategories:c(n.Categories.getTopCategories),SearchCategories:c(n.Categories.searchCategories)},n.Competitions={acceptRulesJson:s([["POST",null,"application/json"],[],"/c/{0}/rules/accept.json",["id"],[],null,"json",null,null,null]),addCategory:r([["GET","application/json","application/json"],[],"/c/{0}/categories/add/{1}",["competitionId","categoryId"],[],null,"json",null,null,null]),competitionDataFilesAccept:s([["POST","application/json","application/json"],[],"/c/{0}/data/files/accept",["competitionId"],[],null,"json",null,null,null]),competitionSearch:s([["POST","application/json","application/json"],[],"/competitions_search.json",[],[],null,"json",null,null,null]),createCompetition:s([["POST","application/json","application/json"],[],"/competitions/new",[],[],null,"json",null,null,null]),createNewDataVersion:s([["POST","application/json","application/json"],[],"/c/{0}/admin/data/create",["id"],[],null,"json",null,null,null]),deleteDataFileReact:s([["DELETE",null,"application/json"],[],"/c/{0}/data/{1}",["id","competitionDataFileId"],[],null,"json",null,null,null]),download:r([["GET","application/json","application/json"],[],"/c/{0}/download/{1}",["id","fileName"],[],null,"json",null,null,null]),downloadAll:r([["GET","application/json","application/json"],[],"/c/{0}/download-all",["id"],[],null,"json",null,null,null]),getCompetitionDataBundle:r([["GET","application/json","application/json"],[],"/c/{0}/data/bundle",["competitionId"],[],null,"json",null,null,null]),getCompetitionDataFiles:r([["GET","application/json","application/json"],[],"/c/{0}/data/files",["competitionId"],[],null,"json",null,null,null]),getCompetitionHasSubmissionColumnMapping:s([["POST",null,"application/json"],[],"/c/{0}/getCompetitionHasSubmissionColumnMapping.json",["id"],[],null,"json",null,null,null]),getCompetitionJson:r([["GET","application/json","application/json"],[],"/c/{0}.json",["id"],[],null,"json",null,null,null]),getHostChecklist:r([["GET","application/json","application/json"],[],"/c/{0}/host/checklist.json",["competitionId"],[],null,"json",null,null,null]),getSandboxSubmissions:r([["GET","application/json","application/json"],[],"/admin/c/{0}/sandboxSubmissions.json",["competitionId"],[],null,"json",null,null,null]),getSubmissionsByTeam:r([["GET","application/json","application/json"],[],"/c/{0}/team-submissions.json",["id"],["teamId"],null,"json",null,null,null]),getSubmissionStatus:r([["GET","application/json","application/json"],[],"/c/{0}/submissions/status.json",["id"],["teamId","submissionId","greaterThanSubmissionId"],null,"json",null,null,null]),getTeams:r([["GET","application/json","application/json"],[],"/c/{0}/teams.json",["competitionId"],["filter","hideUnrankedTeams","sortBy","page"],null,"json",null,null,null]),pollCreationStatus:r([["GET","application/json","application/json"],[],"/c/{0}/admin/data/poll",["id"],[],null,"json",null,null,null]),postPlaygroundSubmission:s([["POST",null,"application/json"],[],"/c/{0}/playgroundSubmissions.json",["id"],["blobFileToken"],null,"json",null,null,null]),postSubmission:s([["POST",null,"application/json"],[],"/c/{0}/submission.json",["id"],["submissionDescription"],null,"json",null,null,null]),regenerateShareToken:r([["GET","application/json","application/json"],[],"/c/{0}/regen-token.json",["id"],[],null,"json",null,null,null]),removeCategory:r([["GET","application/json","application/json"],[],"/c/{0}/categories/remove/{1}",["competitionId","categoryId"],[],null,"json",null,null,null]),rescoreCompetitionSubmission:s([["POST",null,"application/json"],[],"/c/{0}/submissions/{1}/rescore",["competitionId","submissionId"],[],null,"json",null,null,null]),savePrivacy:s([["POST","application/json","application/json"],[],"/c/{0}/privacy.json",["id"],[],null,"json",null,null,null]),setBenchmarkSubmissionName:s([["POST",null,"application/json"],[],"/c/{0}/setBenchmarkSubmissionName.json",["id"],["name","submissionId"],null,"json",null,null,null]),syncCompetitionDataFilesToKernels:s([["POST",null,"application/json"],[],"/c/{0}/data/sync-kernels",["competitionId"],[],null,"json",null,null,null]),toggleBenchmarkSubmission:s([["POST",null,"application/json"],[],"/c/{0}/toggleBenchmarkSubmission.json",["id"],["submissionId"],null,"json",null,null,null]),updateBenchmarks:s([["POST","application/json","application/json"],[],"/c/{0}/data/benchmarks/details.json",["competitionId"],[],null,"json",null,null,null]),updateSubmissionDetails:s([["POST",null,"application/json"],[],"/competitions/submissions/details.json",[],[],null,"json",null,null,null])},n.ReactCompetitions={AddCategory:c(n.Competitions.addCategory),Download:c(n.Competitions.download),DownloadAll:c(n.Competitions.downloadAll),GetCompetitionDataBundle:c(n.Competitions.getCompetitionDataBundle),GetCompetitionDataFiles:c(n.Competitions.getCompetitionDataFiles),GetCompetitionJson:c(n.Competitions.getCompetitionJson),GetHostChecklist:c(n.Competitions.getHostChecklist),GetSandboxSubmissions:c(n.Competitions.getSandboxSubmissions),GetSubmissionsByTeam:c(n.Competitions.getSubmissionsByTeam),GetSubmissionStatus:c(n.Competitions.getSubmissionStatus),GetTeams:c(n.Competitions.getTeams),PollCreationStatus:c(n.Competitions.pollCreationStatus),RegenerateShareToken:c(n.Competitions.regenerateShareToken),RemoveCategory:c(n.Competitions.removeCategory)},n.CompetitionsHost={addHostUser:s([["PUT",null,"application/json"],[],"/api/c/{0}/host/admins/add/{1}",["competitionId","hostUserId"],[],null,"json",null,null,null]),downloadDerivedSolution:r([["GET","application/json","application/json"],[],"/api/c/{0}/host/solution/derived.csv",["competitionId"],[],null,"json",null,null,null]),downloadRawSolution:r([["GET","application/json","application/json"],[],"/api/c/{0}/host/solution/raw.zip",["competitionId"],[],null,"json",null,null,null]),getEvaluation:r([["GET","application/json","application/json"],[],"/api/c/{0}/host/evaluation",["competitionId"],[],null,"json",null,null,null]),getEvaluationMetric:r([["GET","application/json","application/json"],[],"/api/c/{0}/host/evaluation/metrics/{1}",["competitionId","metricId"],[],null,"json",null,null,null]),getHostClaims:r([["GET","application/json","application/json"],[],"/api/c/{0}/host/claims",["competitionId"],[],null,"json",null,null,null]),getHostUsers:r([["GET","application/json","application/json"],[],"/api/c/{0}/host/admins",["competitionId"],[],null,"json",null,null,null]),getSolutionColumnMapping:r([["GET","application/json","application/json"],[],"/api/c/{0}/host/evaluation/solution/mappings",["competitionId"],[],null,"json",null,null,null]),getSolutionInfo:r([["GET","application/json","application/json"],[],"/api/c/{0}/host/solution",["competitionId"],[],null,"json",null,null,null]),getSubmissionColumnMapping:r([["GET","application/json","application/json"],[],"/api/c/{0}/host/evaluation/submission/mappings",["competitionId"],[],null,"json",null,null,null]),getTopEvaluationMetricIds:r([["GET","application/json","application/json"],[],"/api/c/{0}/host/evaluation/metrics",["competitionId"],["count"],null,"json",null,null,null]),launchCompetition:s([["POST","application/json","application/json"],[],"/api/c/{0}/host/launch",["competitionId"],[],null,"json",null,null,null]),obliterateEvaluationFromStep:s([["POST",null,"application/json"],[],"/api/c/{0}/host/evaluation/obliterate/{1}",["competitionId","stepId"],[],null,"json",null,null,null]),queueSolutionMappingUpdate:s([["POST","application/json","application/json"],[],"/api/c/{0}/host/evaluation/solution/mappings",["competitionId"],[],null,"json",null,null,null]),queueSolutionUpdate:s([["POST",null,"application/json"],[],"/api/c/{0}/host/evaluation/solution",["competitionId"],["fileName"],null,"json",null,null,null]),queueSubmissionMappingUpdate:s([["POST","application/json","application/json"],[],"/api/c/{0}/host/evaluation/submission/mappings",["competitionId"],[],null,"json",null,null,null]),queueSubmissionUpdate:s([["POST",null,"application/json"],[],"/api/c/{0}/host/evaluation/submission",["competitionId"],["fileName"],null,"json",null,null,null]),removeHostUser:s([["DELETE",null,"application/json"],[],"/api/c/{0}/host/admins/{1}",["competitionId","hostUserId"],[],null,"json",null,null,null]),saveImage:s([["POST",null,"application/json"],[],"/api/c/{0}/host/image",["competitionId"],[],null,"json",null,null,null]),saveSettings:s([["POST","application/json","application/json"],[],"/api/c/{0}/host/settings",["competitionId"],[],null,"json",null,null,null]),searchHostUsers:r([["GET","application/json","application/json"],[],"/api/c/{0}/host/admins/search",["competitionId"],["query"],null,"json",null,null,null]),setEvaluationMetric:s([["PUT",null,"application/json"],[],"/api/c/{0}/host/evaluation/metrics/{1}",["competitionId","metricId"],[],null,"json",null,null,null]),setEvaluationMetricParameters:s([["PUT","application/json","application/json"],[],"/api/c/{0}/host/evaluation/metric/parameters",["competitionId"],[],null,"json",null,null,null]),updateTeamVisibility:s([["POST","application/json","application/json"],[],"/api/c/{0}/host/teams/visibility",["competitionId"],[],null,"json",null,null,null])},n.ReactCompetitionsHost={DownloadDerivedSolution:c(n.CompetitionsHost.downloadDerivedSolution),DownloadRawSolution:c(n.CompetitionsHost.downloadRawSolution),GetEvaluation:c(n.CompetitionsHost.getEvaluation),GetEvaluationMetric:c(n.CompetitionsHost.getEvaluationMetric),GetHostClaims:c(n.CompetitionsHost.getHostClaims),GetHostUsers:c(n.CompetitionsHost.getHostUsers),GetSolutionColumnMapping:c(n.CompetitionsHost.getSolutionColumnMapping),GetSolutionInfo:c(n.CompetitionsHost.getSolutionInfo),GetSubmissionColumnMapping:c(n.CompetitionsHost.getSubmissionColumnMapping),GetTopEvaluationMetricIds:c(n.CompetitionsHost.getTopEvaluationMetricIds),SearchHostUsers:c(n.CompetitionsHost.searchHostUsers)},n.Datasets={activityData:r([["GET","application/json","application/json"],[],"/{0}/{1}/activity",["ownerSlug","datasetSlug"],[],null,"json",null,null,null]),addCategory:r([["GET","application/json","application/json"],[],"/{0}/{1}/categories/add/{2}",["ownerSlug","datasetSlug","categoryId"],[],null,"json",null,null,null]),collapseChecklist:s([["POST",null,"application/json"],[],"/{0}/{1}/collapse-checklist/{2}",["ownerSlug","datasetSlug","isCollapsed"],[],null,"json",null,null,null]),createNewDataset:s([["POST","application/json","application/json"],[],"/datasets/create",[],[],null,"json",null,null,null]),createNewVersion:s([["POST","application/json","application/json"],[],"/{0}/{1}/create/version",["ownerSlug","datasetSlug"],[],null,"json",null,null,null]),datasetSearch:s([["POST","application/json","application/json"],[],"/datasets_search.json",[],[],null,"json",null,null,null]),datasetSuggestionsJson:r([["GET","application/json","application/json"],[],"/{0}/{1}/suggestions.json",["ownerSlug","datasetSlug"],["datasetId","datasetVersionId"],null,"json",null,null,null]),delete:r([["GET","application/json","application/json"],[],"/{0}/{1}/dataset-delete",["ownerSlug","datasetSlug"],[],null,"json",null,null,null]),deleteDatasetById:r([["GET","application/json","application/json"],[],"/ds/{0}/dataset-delete",["id"],[],null,"json",null,null,null]),dismissChecklist:s([["POST",null,"application/json"],[],"/{0}/{1}/dismiss-checklist",["ownerSlug","datasetSlug"],[],null,"json",null,null,null]),editDatabundleVersionObjectColumn:s([["POST","application/json","application/json"],[],"/databundle/edit/column",[],[],null,"json",null,null,null]),editDatabundleVersionObjectDescription:s([["POST","application/json","application/json"],[],"/databundle/edit/object-description",[],[],null,"json",null,null,null]),editDatabundleVersionObjectTableDescription:s([["POST","application/json","application/json"],[],"/databundle/edit/table-description",[],[],null,"json",null,null,null]),editDatasetCollaborators:s([["POST","application/json","application/json"],[],"/{0}/{1}/edit/collaborators",["ownerSlug","datasetSlug"],[],null,"json",null,null,null]),editDescription:s([["POST","application/json","application/json"],[],"/{0}/{1}/edit/description",["ownerSlug","datasetSlug"],["datasetVersionId"],null,"json",null,null,null]),editGeneral:s([["POST","application/json","application/json"],[],"/{0}/{1}/edit/general",["ownerSlug","datasetSlug"],["datasetVersionId"],null,"json",null,null,null]),editMultiDatabundleVersionObjectColumn:s([["POST","application/json","application/json"],[],"/databundle/edit/columns",[],[],null,"json",null,null,null]),editPower:s([["POST","application/json","application/json"],[],"/{0}/{1}/edit/power",["ownerSlug","datasetSlug"],["datasetVersionId"],null,"json",null,null,null]),editPrivacy:s([["POST","application/json","application/json"],[],"/{0}/{1}/edit/privacy",["ownerSlug","datasetSlug"],[],null,"json",null,null,null]),editSize:r([["GET","application/json","application/json"],[],"/{0}/{1}/edit/size",["ownerSlug","datasetSlug"],["totalSize"],null,"json",null,null,null]),editVersionNotes:s([["POST","application/json","application/json"],[],"/{0}/{1}/edit/dataset-versions",["ownerSlug","datasetSlug"],["datasetId"],null,"json",null,null,null]),getDatasetLimits:s([["POST","application/json","application/json"],[],"/datasets/limits",[],[],null,"json",null,null,null]),getInboxUrl:s([["POST","application/json","application/json"],[],"/datasets/inbox-url",[],[],null,"json",null,null,null]),getJoinSuggestions:s([["POST","application/json","application/json"],[],"/datasets/join-recommendations",[],[],null,"json",null,null,null]),getUploadData:r([["GET","application/json","application/json"],[],"/datasets/upload-data",[],["ownerOrganization","ownerUser"],null,"json",null,null,null]),getUploadSettings:r([["GET","application/json","application/json"],[],"/datasets/upload-settings",[],["ownerOrganization","ownerUser","excludeDatasetVersionId"],null,"json",null,null,null]),pollCreationStatusById:r([["GET","application/json","application/json"],[],"/ds/{0}/poll",["datasetId"],["needsMetadata"],null,"json",null,null,null]),pollCreationStatusBySlug:r([["GET","application/json","application/json"],[],"/{0}/{1}/poll",["ownerSlug","datasetSlug"],["datasetId","needsMetadata"],null,"json",null,null,null]),pollDatabundleCreationStatus:r([["GET","application/json","application/json"],[],"/databundle/{0}/poll",["databundleVersionId"],[],null,"json",null,null,null]),previewDatabundleVersionObject:s([["POST","application/json","application/json"],[],"/databundle/preview/object",[],[],null,"json",null,null,null]),previewDatabundleVersionObjectArchive:s([["POST","application/json","application/json"],[],"/databundle/preview/v2/archive",[],[],null,"json",null,null,null]),previewDatabundleVersionObjectArchiveImage:s([["POST","application/json","application/json"],[],"/databundle/preview/v2/archive-image",[],[],null,"json",null,null,null]),previewDatabundleVersionObjectImage:s([["POST","application/json","application/json"],[],"/databundle/preview/v2/image",[],[],null,"json",null,null,null]),previewDatabundleVersionObjectRaw:s([["POST","application/json","application/json"],[],"/databundle/preview/v2/raw",[],[],null,"json",null,null,null]),previewDatabundleVersionObjectTable:s([["POST","application/json","application/json"],[],"/databundle/preview/table",[],[],null,"json",null,null,null]),previewInboxFile:s([["POST","application/json","application/json"],[],"/datasets/inbox-preview",[],[],null,"json",null,null,null]),previewKernelOutputFileRaw:s([["POST","application/json","application/json"],[],"/databundle/preview/v2/kernel",[],[],null,"json",null,null,null]),removeCategory:r([["GET","application/json","application/json"],[],"/{0}/{1}/categories/remove/{2}",["ownerSlug","datasetSlug","categoryId"],[],null,"json",null,null,null]),replayDatabundleWorkerMessage:r([["GET","application/json","application/json"],[],"/databundle/worker-replay/{0}",["messageId"],[],null,"json",null,null,null]),requestDelete:r([["GET","application/json","application/json"],[],"/{0}/{1}/dataset-request-delete",["ownerSlug","datasetSlug"],[],null,"json",null,null,null]),resetStatus:r([["GET","application/json","application/json"],[],"/{0}/{1}/version/{2}/reset-status/{3}",["ownerSlug","datasetSlug","datasetVersionNumber","status"],["datasetId","datasetVersionId"],null,"json",null,null,null]),viewDatabundleVersion:r([["GET","application/json","application/json"],[],"/databundle/version/{0}/view",["databundleVersionId"],[],null,"json",null,null,null]),viewDatabundleVersionJson:r([["GET","application/json","application/json"],[],"/databundle/version/{0}/view.json",["databundleVersionId"],[],null,"json",null,null,null]),viewDatasetCollaborators:r([["GET","application/json","application/json"],[],"/{0}/{1}/view/collaborators",["ownerSlug","datasetSlug"],["datasetVersionId"],null,"json",null,null,null]),viewDatasetVersions:r([["GET","application/json","application/json"],[],"/{0}/{1}/versions",["ownerSlug","datasetSlug"],[],null,"json",null,null,null])},n.ReactDatasets={ActivityData:c(n.Datasets.activityData),AddCategory:c(n.Datasets.addCategory),DatasetSuggestionsJson:c(n.Datasets.datasetSuggestionsJson),Delete:c(n.Datasets.delete),DeleteDatasetById:c(n.Datasets.deleteDatasetById),EditSize:c(n.Datasets.editSize),GetUploadData:c(n.Datasets.getUploadData),GetUploadSettings:c(n.Datasets.getUploadSettings),PollCreationStatusById:c(n.Datasets.pollCreationStatusById),PollCreationStatusBySlug:c(n.Datasets.pollCreationStatusBySlug),PollDatabundleCreationStatus:c(n.Datasets.pollDatabundleCreationStatus),RemoveCategory:c(n.Datasets.removeCategory),ReplayDatabundleWorkerMessage:c(n.Datasets.replayDatabundleWorkerMessage),RequestDelete:c(n.Datasets.requestDelete),ResetStatus:c(n.Datasets.resetStatus),ViewDatabundleVersion:c(n.Datasets.viewDatabundleVersion),ViewDatabundleVersionJson:c(n.Datasets.viewDatabundleVersionJson),ViewDatasetCollaborators:c(n.Datasets.viewDatasetCollaborators),ViewDatasetVersions:c(n.Datasets.viewDatasetVersions)},n.DockerImageBuilder={newImageBuildStatus:r([["GET","application/json","application/json"],[],"/kernels/getimage.json",[],["requestId"],null,"json",null,null,null]),requestNewImageBuild:s([["POST","application/json","application/json"],[],"/kernels/newimage.json",[],[],null,"json",null,null,null])},n.ReactDockerImageBuilder={NewImageBuildStatus:c(n.DockerImageBuilder.newImageBuildStatus)},n.Education={educationTracking:s([["POST","application/json","application/json"],[],"/education/tracking",[],[],null,"json",null,null,null]),setLearnUpdateSubscription:s([["POST","application/json","application/json"],[],"/education/email-updates/subscribe",[],[],null,"json",null,null,null]),trackExerciseInteraction:s([["POST","application/json","application/json"],[],"/learn/exercise-interaction",[],[],null,"json",null,null,null]),updateTutorialProgress:s([["POST","application/json","application/json"],[],"/learn/progress/update",[],[],null,"json",null,null,null])},n.ReactEducation={},n.FeatureFlags={getVisibleFeatures:s([["POST","application/json","application/json"],[],"/features/visibility",[],[],null,"json",null,null,null])},n.ReactFeatureFlags={},n.Files={inboxDropAccept:s([["POST","application/json","application/json"],[],"/files/drop.json",[],[],null,"json",null,null,null])},n.ReactFiles={},n.Forums={createKernelComment:s([["POST","application/json","application/json"],[],"/kernels/comments/ajax",[],[],null,"json",null,null,null]),editMessage:s([["PUT","application/json","application/json"],[],"/messages/{0}",["forumMessageId"],[],null,"json",null,null,null]),getComments:r([["GET","application/json","application/json"],[],"/topics/{0}/comments.json",["forumTopicId"],["sort"],null,"json",null,null,null]),replyToMessage:s([["POST","application/json","application/json"],[],"/messages/{0}/replies",["forumMessageId"],[],null,"json",null,null,null]),replyToTopic:s([["POST","application/json","application/json"],[],"/topics/{0}/replies",["forumTopicId"],[],null,"json",null,null,null])},n.ReactForums={GetComments:c(n.Forums.getComments)},n.Home={contact:s([["POST","application/json","application/json"],[],"/contact",[],["captchaValid"],null,"json",null,null,null])},n.ReactHome={},n.IncognitoLoginAs={createTokenForUser:r([["GET","application/json","application/json"],[],"/admin/login/as/incognito/token",[],["userId","activityLogId"],null,"json",null,null,null])},n.ReactIncognitoLoginAs={CreateTokenForUser:c(n.IncognitoLoginAs.createTokenForUser)},n.JobsBoard={notifySubscribers:r([["GET","application/json","application/json"],[],"/notify-job/{0}",["jobId"],[],null,"json",null,null,null])},n.ReactJobsBoard={NotifySubscribers:c(n.JobsBoard.notifySubscribers)},n.NerdChallenges={reactAcceptNerdChallenge:s([["POST",null,"application/json"],[],"/nerdchallenge/verify",[],["token","response","comment"],null,"json",null,null,null]),reactGetNerdChallenge:s([["POST",null,"application/json"],[],"/nerdchallenge/token",[],["parentToken"],null,"json",null,null,null]),reactGetNewNerdChallenge:s([["POST",null,"application/json"],[],"/nerdchallenge/newtoken",[],["parentToken"],null,"json",null,null,null])},n.ReactNerdChallenges={},n.Notification={readNotification:r([["GET","application/json","application/json"],[],"/notifications/open/{0}",["notificationId"],[],null,"json",null,null,null])},n.ReactNotification={ReadNotification:c(n.Notification.readNotification)},n.Pages={changeDocPageOrder:r([["GET","application/json","application/json"],[],"/admin/cms/change-doc-page-order.json",[],["pageId","orderNum","search","filter","group","sortBy"],null,"json",null,null,null]),getCmsPagesJson:r([["GET","application/json","application/json"],[],"/admin/cms.json",[],["search","filter","group","sortBy"],null,"json",null,null,null]),saveCmsPage:s([["POST","application/json","application/json"],[],"/admin/cms/save",[],[],null,"json",null,null,null])},n.ReactPages={ChangeDocPageOrder:c(n.Pages.changeDocPageOrder),GetCmsPagesJson:c(n.Pages.getCmsPagesJson)},n.Redis={redisLongPollJson:s([["POST","application/json","application/json"],[],"/redis/sub/json",[],[],null,"json",null,null,null])},n.ReactRedis={},n.Scripts={acceptRules:s([["POST",null,"application/json"],[],"/kernels/rules-acceptance.json",[],["scriptVersionId","competitionId"],null,"json",null,null,null]),addCategory:r([["GET","application/json","application/json"],[],"/{0}/{1}/kernels-categories/add/{2}",["userName","kernelSlug","categoryId"],[],null,"json",null,null,null]),basicKernelStatus:r([["GET","application/json","application/json"],[],"/kernels/statmin.json",[],["id"],null,"json",null,null,null]),cancelScript:s([["POST",null,"application/json"],[],"/kernels/cancel",[],["scriptVersionId"],null,"json",null,null,null]),checkRulesAcceptance:r([["GET","application/json","application/json"],[],"/kernels/rules-acceptance.json",[],["scriptVersionId","competitionId"],null,"json",null,null,null]),createNewKernelTemplate:r([["GET","application/json","application/json"],[],"/{0}/{1}/kernels/template/create",["ownerSlug","datasetSlug"],["datasetVersionId"],null,"json",null,null,null]),editCollaborators:s([["POST","application/json","application/json"],[],"/kernels/edit-collaborators.json",[],[],null,"json",null,null,null]),getCustomPackagesList:r([["GET","application/json","application/json"],[],"/kernels/packagelist/{0}",["dockerImageVersionId"],[],null,"json",null,null,null]),getDetailedVersion:r([["GET","application/json","application/json"],[],"/kernels/detail/{0}/{1}",["userName","kernelSlug"],["scriptVersionId"],null,"json",null,null,null]),getScriptSourceFromDb:r([["GET","application/json","application/json"],[],"/kernels/scriptcontent/{0}/download",["scriptVersionId"],[],null,"json",null,null,null]),getVersions:r([["GET","application/json","application/json"],[],"/kernels/{0}/version-history.json",["scriptVersionId"],[],null,"json",null,null,null]),kernelsSearch:s([["POST","application/json","application/json"],[],"/kernels_search.json",[],[],null,"json",null,null,null]),kernelStatus:r([["GET","application/json","application/json"],[],"/kernels/status",[],["existingStatus","id"],null,"json",null,null,null]),kernelSuggestions:r([["GET","application/json","application/json"],[],"/kernels/suggestions.json/{0}",["kernelId"],[],null,"json",null,null,null]),pinDockerImageVersion:s([["POST","application/json","application/json"],[],"/kernels/pinimage",[],[],null,"json",null,null,null]),removeCategory:r([["GET","application/json","application/json"],[],"/{0}/{1}/kernels-categories/remove/{2}",["userName","kernelSlug","categoryId"],[],null,"json",null,null,null]),reportNotebookError:s([["POST","application/json","application/json"],[],"/kernels/nberr",[],[],null,"json",null,null,null]),reportScriptTipClick:s([["POST","application/json","application/json"],[],"/kernels/stclick",[],[],null,"json",null,null,null]),saveScript:s([["POST","application/json","application/json"],[],"/kernels/save",[],[],null,"json",null,null,null]),scriptVersionDiff:r([["GET","application/json","application/json"],[],"/kernels/diff/{0}/{1}",["leftScriptVersionId","rightScriptVersionId"],[],null,"json",null,null,null]),showScript:r([["GET","application/json","application/json"],[],"/{0}/{1}/{2}",["userName","kernelSlug","tab"],[],null,"json",null,null,null]),showScriptJson:r([["GET","application/json","application/json"],[],"/{0}/{1}/json",["userName","kernelSlug"],["tab","scriptVersionId"],null,"json",null,null,null]),startNotebookKernel:s([["POST","application/json","application/json"],[],"/kernels/byod/newkernel",[],[],null,"json",null,null,null]),updateOrCheckKernelTitle:s([["POST","application/json","application/json"],[],"/kernels/byod/kerneltitle",[],[],null,"json",null,null,null])},n.ReactScripts={AddCategory:c(n.Scripts.addCategory),BasicKernelStatus:c(n.Scripts.basicKernelStatus),CheckRulesAcceptance:c(n.Scripts.checkRulesAcceptance),CreateNewKernelTemplate:c(n.Scripts.createNewKernelTemplate),GetCustomPackagesList:c(n.Scripts.getCustomPackagesList),GetDetailedVersion:c(n.Scripts.getDetailedVersion),GetScriptSourceFromDb:c(n.Scripts.getScriptSourceFromDb),GetVersions:c(n.Scripts.getVersions),KernelStatus:c(n.Scripts.kernelStatus),KernelSuggestions:c(n.Scripts.kernelSuggestions),RemoveCategory:c(n.Scripts.removeCategory),ScriptVersionDiff:c(n.Scripts.scriptVersionDiff),ShowScript:c(n.Scripts.showScript),ShowScriptJson:c(n.Scripts.showScriptJson)},n.Teams={acceptMerge:s([["POST",null,"application/json"],[],"/mergeRequests/{0}/accept",["id"],[],null,"json",null,null,null]),rejectMerge:s([["POST",null,"application/json"],[],"/mergeRequests/{0}/reject",["id"],[],null,"json",null,null,null]),searchTeams:s([["POST","application/json","application/json"],[],"/competitions/{0}/teams/search",["competitionId"],["teamName"],null,"json",null,null,null])},n.ReactTeams={},n.Users={followUser:s([["PUT",null,"application/json"],[],"/{0}/follow.json",["userName"],[],null,"json",null,null,null]),getActivity:r([["GET","application/json","application/json"],[],"/{0}/activity.json",["userName"],["userId"],null,"json",null,null,null]),getCaptchaConfig:r([["GET","application/json","application/json"],[],"/captcha/config",[],[],null,"json",null,null,null]),getOrganizations:r([["GET","application/json","application/json"],[],"/user-organizations",[],["filter"],null,"json",null,null,null]),getOwners:r([["GET","application/json","application/json"],[],"/user-owners",[],["filter","maxUserResults","maxOrganizationResults"],null,"json",null,null,null]),getUserClaims:r([["GET","application/json","application/json"],[],"/user/claims",[],[],null,"json",null,null,null]),searchUsersJson:r([["GET","application/json","application/json"],[],"/users/search.json",[],["query"],null,"json",null,null,null]),unfollowUser:s([["PUT",null,"application/json"],[],"/{0}/unfollow.json",["userName"],[],null,"json",null,null,null])},n.ReactUsers={GetActivity:c(n.Users.getActivity),GetCaptchaConfig:c(n.Users.getCaptchaConfig),GetOrganizations:c(n.Users.getOrganizations),GetOwners:c(n.Users.getOwners),GetUserClaims:c(n.Users.getUserClaims),SearchUsersJson:c(n.Users.searchUsersJson)},n.Requests={addSiteConfig:function(e){return p("AddSiteConfigRequest",e)},deleteSiteConfig:function(e){return p("DeleteSiteConfigRequest",e)},getAdminUser:function(e){return p("GetAdminUserRequest",e)},getLoggingConfig:function(e){return p("GetLoggingConfigRequest",e)},getSiteConfigs:function(e){return p("GetSiteConfigsRequest",e)},updateLoggingConfig:function(e){return p("UpdateLoggingConfigRequest",e)},updateSiteConfig:function(e){return p("UpdateSiteConfigRequest",e)},getSubmissionsForUser:function(e){return p("GetSubmissionsForUserRequest",e)},getTeamsForUser:function(e){return p("GetTeamsForUserRequest",e)},hideSubmissions:function(e){return p("HideSubmissionsRequest",e)},requestMerge:function(e){return p("RequestMergeRequest",e)},searchCompetitions:function(e){return p("SearchCompetitionsRequest",e)},searchTeams:function(e){return p("SearchTeamsRequest",e)},getDatasetsById:function(e){return p("GetDatasetsByIdRequest",e)},searchDatasets:function(e){return p("SearchDatasetsRequest",e)},softDeleteDatasetsForOrg:function(e){return p("SoftDeleteDatasetsForOrgRequest",e)},softDeleteDatasetsForUser:function(e){return p("SoftDeleteDatasetsForUserRequest",e)},undeleteDatasetsForUser:function(e){return p("UndeleteDatasetsForUserRequest",e)},deleteMessage:function(e){return p("DeleteMessageRequest",e)},deleteTopic:function(e){return p("DeleteTopicRequest",e)},toggleFlagMessage:function(e){return p("ToggleFlagMessageRequest",e)},toggleSpamMessage:function(e){return p("ToggleSpamMessageRequest",e)},unsubscribeWatches:function(e){return p("UnsubscribeWatchesRequest",e)},deleteJobSubscription:function(e){return p("DeleteJobSubscriptionRequest",e)},expireJob:function(e){return p("ExpireJobRequest",e)},getJobCartPrice:function(e){return p("GetJobCartPriceRequest",e)},getJobGroups:function(e){return p("GetJobGroupsRequest",e)},getJob:function(e){return p("GetJobRequest",e)},getJobsByUser:function(e){return p("GetJobsByUserRequest",e)},getJobSubscription:function(e){return p("GetJobSubscriptionRequest",e)},hasSavedCard:function(e){return p("HasSavedCardRequest",e)},incrementJobViews:function(e){return p("IncrementJobViewsRequest",e)},publishJob:function(e){return p("PublishJobRequest",e)},purchaseJobs:function(e){return p("PurchaseJobsRequest",e)},searchJobs:function(e){return p("SearchJobsRequest",e)},searchPlaces:function(e){return p("SearchPlacesRequest",e)},updateJob:function(e){return p("UpdateJobRequest",e)},updateJobSubscription:function(e){return p("UpdateJobSubscriptionRequest",e)},autoSave:function(e){return p("AutoSaveRequest",e)},cancelKernelRun:function(e){return p("CancelKernelRunRequest",e)},commitAndRun:function(e){return p("CommitAndRunRequest",e)},createKernel:function(e){return p("CreateKernelRequest",e)},createKernelRun:function(e){return p("CreateKernelRunRequest",e)},deleteKernel:function(e){return p("DeleteKernelRequest",e)},getActiveInteractiveKernelRun:function(e){return p("GetActiveInteractiveKernelRunRequest",e)},getInjectionToken:function(e){return p("GetInjectionTokenRequest",e)},getKernelDraft:function(e){return p("GetKernelDraftRequest",e)},getKernelListDetails:function(e){return p("GetKernelListDetailsRequest",e)},getKernelMessage:function(e){return p("GetKernelMessageRequest",e)},getKernel:function(e){return p("GetKernelRequest",e)},getKernelRun:function(e){return p("GetKernelRunRequest",e)},listKernels:function(e){return p("ListKernelIdsRequest",e)},listKernelVersions:function(e){return p("ListKernelVersionsRequest",e)},listRecentKernels:function(e){return p("ListRecentKernelsRequest",e)},promoteKernelDraft:function(e){return p("PromoteKernelDraftRequest",e)},markAllNotifications:function(e){return p("MarkAllNotificationsRequest",e)},setUserNotificationSettings:function(e){return p("SetUserNotificationSettingsRequest",e)},subscribeTo:function(e){return p("SubscribeToRequest",e)},userNotificationSettings:function(e){return p("UserNotificationSettingsRequest",e)},userNotifications:function(e){return p("UserNotificationsRequest",e)},acceptCookies:function(e){return p("AcceptCookiesRequest",e)},activateAccount:function(e){return p("ActivateAccountRequest",e)},cheatBlockAccount:function(e){return p("CheatBlockAccountRequest",e)},createKaggleAccount:function(e){return p("CreateKaggleAccountRequest",e)},deleteOrganizationMemberships:function(e){return p("DeleteOrganizationMembershipsRequest",e)},deleteOrganization:function(e){return p("DeleteOrganizationRequest",e)},deletePhoneVerifications:function(e){return p("DeletePhoneVerificationsRequest",e)},deleteUserLogins:function(e){return p("DeleteUserLoginsRequest",e)},failNerdcha:function(e){return p("FailNerdchaRequest",e)},getCurrentUserId:function(e){return p("GetCurrentUserIdRequest",e)},getCurrentUser:function(e){return p("GetCurrentUserRequest",e)},getDuplicateUsers:function(e){return p("GetDuplicateUsersRequest",e)},getNewPassword:function(e){return p("GetNewPasswordRequest",e)},getUserCount:function(e){return p("GetUserCountRequest",e)},getUser:function(e){return p("GetUserRequest",e)},getUserStatusLogs:function(e){return p("GetUserStatusLogsRequest",e)},grantSiteAdmin:function(e){return p("GrantSiteAdminRequest",e)},hardDeleteAccount:function(e){return p("HardDeleteAccountRequest",e)},lockOutAccount:function(e){return p("LockOutAccountRequest",e)},migrateTermsAcceptances:function(e){return p("MigrateTermsAcceptancesRequest",e)},resetPassword:function(e){return p("ResetPasswordRequest",e)},revokeSiteAdmin:function(e){return p("RevokeSiteAdminRequest",e)},softDeleteAccount:function(e){return p("SoftDeleteAccountRequest",e)},spamBlockAccount:function(e){return p("SpamBlockAccountRequest",e)},unsubscribeNewsletter:function(e){return p("UnsubscribeNewsletterRequest",e)},unverifyPhone:function(e){return p("UnverifyPhoneRequest",e)},verifyPhone:function(e){return p("VerifyPhoneRequest",e)},attachDataSource:function(e){return p("AttachDataSourceRequest",e)},getDatabundleData:function(e){return p("GetDatabundleDataRequest",e)}};var x;!function(e){!function(e){!function(e){!function(e){!function(e){!function(e){e.CompetitionDataFiles="competitionDataFiles",e.CompetitionSubmissions="competitionSubmissions",e.CompetitionSolutions="competitionSolutions",e.SdsCompetitionDataFiles="sdsCompetitionDataFiles",e.DatasetVersionFiles="datasetVersionFiles",e.InboxFiles="inboxFiles",e.ForumMessageAttachmentFiles="forumMessageAttachmentFiles"}(e.Name||(e.Name={}));!function(e){e[e.CompetitionDataFiles=0]="CompetitionDataFiles",e[e.CompetitionSubmissions=1]="CompetitionSubmissions",e[e.CompetitionSolutions=2]="CompetitionSolutions",e[e.SdsCompetitionDataFiles=3]="SdsCompetitionDataFiles",e[e.DatasetVersionFiles=4]="DatasetVersionFiles",e[e.InboxFiles=5]="InboxFiles",e[e.ForumMessageAttachmentFiles=6]="ForumMessageAttachmentFiles"}(e.Value||(e.Value={}));!function(e){e.CompetitionDataFiles="CompetitionDataFiles",e.CompetitionSubmissions="CompetitionSubmissions",e.CompetitionSolutions="CompetitionSolutions",e.SdsCompetitionDataFiles="SdsCompetitionDataFiles",e.DatasetVersionFiles="DatasetVersionFiles",e.InboxFiles="InboxFiles",e.ForumMessageAttachmentFiles="ForumMessageAttachmentFiles"}(e.Description||(e.Description={}))}(e.ClientBlobBucket||(e.ClientBlobBucket={}))}(e.Enums||(e.Enums={}))}(e.Blobs||(e.Blobs={}))}(e.Kaggle||(e.Kaggle={})),function(e){!function(e){!function(e){!function(e){!function(e){!function(e){e.ConcurrencyViolation="concurrencyViolation"}(e.Name||(e.Name={}));!function(e){e[e.ConcurrencyViolation=0]="ConcurrencyViolation"}(e.Value||(e.Value={}));!function(e){e.ConcurrencyViolation="ConcurrencyViolation"}(e.Description||(e.Description={}))}(e.ValidationExceptionType||(e.ValidationExceptionType={}))}(e.Models||(e.Models={}))}(e.Kernels||(e.Kernels={}))}(e.Sdk||(e.Sdk={}))}(e.Kaggle||(e.Kaggle={})),function(e){!function(e){!function(e){!function(e){!function(e){!function(e){e.Inactivated="inactivated",e.Active="active",e.LockedOut="lockedOut",e.SpamBlocked="spamBlocked",e.CheatBlocked="cheatBlocked",e.SoftDeleted="softDeleted",e.HardDeleted="hardDeleted"}(e.Name||(e.Name={}));!function(e){e[e.Inactivated=1]="Inactivated",e[e.Active=2]="Active",e[e.LockedOut=3]="LockedOut",e[e.SpamBlocked=4]="SpamBlocked",e[e.CheatBlocked=5]="CheatBlocked",e[e.SoftDeleted=6]="SoftDeleted",e[e.HardDeleted=7]="HardDeleted"}(e.Value||(e.Value={}));!function(e){e.Inactivated="Inactivated",e.Active="Active",e.LockedOut="LockedOut",e.SpamBlocked="SpamBlocked",e.CheatBlocked="CheatBlocked",e.SoftDeleted="SoftDeleted",e.HardDeleted="HardDeleted"}(e.Description||(e.Description={}))}(e.UserStatus||(e.UserStatus={}))}(e.Models||(e.Models={}))}(e.Users||(e.Users={}))}(e.Sdk||(e.Sdk={}))}(e.Kaggle||(e.Kaggle={})),function(e){!function(e){!function(e){!function(e){!function(e){e.All="all",e.OnlyPending="onlyPending"}(e.Name||(e.Name={}));!function(e){e[e.All=0]="All",e[e.OnlyPending=1]="OnlyPending"}(e.Value||(e.Value={}));!function(e){e.All="All",e.OnlyPending="OnlyPending"}(e.Description||(e.Description={}))}(e.PendingSearch||(e.PendingSearch={}));!function(e){!function(e){e.All="all",e.OnlyUnarchived="onlyUnarchived"}(e.Name||(e.Name={}));!function(e){e[e.All=0]="All",e[e.OnlyUnarchived=1]="OnlyUnarchived"}(e.Value||(e.Value={}));!function(e){e.All="All",e.OnlyUnarchived="OnlyUnarchived"}(e.Description||(e.Description={}))}(e.UnarchivedSearch||(e.UnarchivedSearch={}))}(e.Dtos||(e.Dtos={}))}(e.Web||(e.Web={}))}(e.Kaggle||(e.Kaggle={}))}(x=n.__GLOBALS__||(n.__GLOBALS__={})),window.Kaggle=g.__assign({},window.Kaggle||{},x.Kaggle)}).call(n,t(50))}},[2809]);